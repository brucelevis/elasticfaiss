// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: work_node.proto

#ifndef PROTOBUF_INCLUDED_work_5fnode_2eproto
#define PROTOBUF_INCLUDED_work_5fnode_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "shard.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_work_5fnode_2eproto 

namespace protobuf_work_5fnode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_work_5fnode_2eproto
namespace elasticfaiss {
class CreateShardRequest;
class CreateShardRequestDefaultTypeInternal;
extern CreateShardRequestDefaultTypeInternal _CreateShardRequest_default_instance_;
class CreateShardResponse;
class CreateShardResponseDefaultTypeInternal;
extern CreateShardResponseDefaultTypeInternal _CreateShardResponse_default_instance_;
class DeleteShardRequest;
class DeleteShardRequestDefaultTypeInternal;
extern DeleteShardRequestDefaultTypeInternal _DeleteShardRequest_default_instance_;
class DeleteShardResponse;
class DeleteShardResponseDefaultTypeInternal;
extern DeleteShardResponseDefaultTypeInternal _DeleteShardResponse_default_instance_;
class ShardPutRequest;
class ShardPutRequestDefaultTypeInternal;
extern ShardPutRequestDefaultTypeInternal _ShardPutRequest_default_instance_;
class ShardPutResponse;
class ShardPutResponseDefaultTypeInternal;
extern ShardPutResponseDefaultTypeInternal _ShardPutResponse_default_instance_;
class ShardRebuildRequest;
class ShardRebuildRequestDefaultTypeInternal;
extern ShardRebuildRequestDefaultTypeInternal _ShardRebuildRequest_default_instance_;
class ShardRebuildResponse;
class ShardRebuildResponseDefaultTypeInternal;
extern ShardRebuildResponseDefaultTypeInternal _ShardRebuildResponse_default_instance_;
}  // namespace elasticfaiss
namespace google {
namespace protobuf {
template<> ::elasticfaiss::CreateShardRequest* Arena::CreateMaybeMessage<::elasticfaiss::CreateShardRequest>(Arena*);
template<> ::elasticfaiss::CreateShardResponse* Arena::CreateMaybeMessage<::elasticfaiss::CreateShardResponse>(Arena*);
template<> ::elasticfaiss::DeleteShardRequest* Arena::CreateMaybeMessage<::elasticfaiss::DeleteShardRequest>(Arena*);
template<> ::elasticfaiss::DeleteShardResponse* Arena::CreateMaybeMessage<::elasticfaiss::DeleteShardResponse>(Arena*);
template<> ::elasticfaiss::ShardPutRequest* Arena::CreateMaybeMessage<::elasticfaiss::ShardPutRequest>(Arena*);
template<> ::elasticfaiss::ShardPutResponse* Arena::CreateMaybeMessage<::elasticfaiss::ShardPutResponse>(Arena*);
template<> ::elasticfaiss::ShardRebuildRequest* Arena::CreateMaybeMessage<::elasticfaiss::ShardRebuildRequest>(Arena*);
template<> ::elasticfaiss::ShardRebuildResponse* Arena::CreateMaybeMessage<::elasticfaiss::ShardRebuildResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace elasticfaiss {

// ===================================================================

class CreateShardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.CreateShardRequest) */ {
 public:
  CreateShardRequest();
  virtual ~CreateShardRequest();

  CreateShardRequest(const CreateShardRequest& from);

  inline CreateShardRequest& operator=(const CreateShardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateShardRequest(CreateShardRequest&& from) noexcept
    : CreateShardRequest() {
    *this = ::std::move(from);
  }

  inline CreateShardRequest& operator=(CreateShardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateShardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateShardRequest* internal_default_instance() {
    return reinterpret_cast<const CreateShardRequest*>(
               &_CreateShardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreateShardRequest* other);
  friend void swap(CreateShardRequest& a, CreateShardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateShardRequest* New() const final {
    return CreateMaybeMessage<CreateShardRequest>(NULL);
  }

  CreateShardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateShardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateShardRequest& from);
  void MergeFrom(const CreateShardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateShardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .elasticfaiss.IndexShardConf conf = 1;
  bool has_conf() const;
  void clear_conf();
  static const int kConfFieldNumber = 1;
  private:
  const ::elasticfaiss::IndexShardConf& _internal_conf() const;
  public:
  const ::elasticfaiss::IndexShardConf& conf() const;
  ::elasticfaiss::IndexShardConf* release_conf();
  ::elasticfaiss::IndexShardConf* mutable_conf();
  void set_allocated_conf(::elasticfaiss::IndexShardConf* conf);

  // @@protoc_insertion_point(class_scope:elasticfaiss.CreateShardRequest)
 private:
  void set_has_conf();
  void clear_has_conf();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::elasticfaiss::IndexShardConf* conf_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateShardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.CreateShardResponse) */ {
 public:
  CreateShardResponse();
  virtual ~CreateShardResponse();

  CreateShardResponse(const CreateShardResponse& from);

  inline CreateShardResponse& operator=(const CreateShardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateShardResponse(CreateShardResponse&& from) noexcept
    : CreateShardResponse() {
    *this = ::std::move(from);
  }

  inline CreateShardResponse& operator=(CreateShardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateShardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateShardResponse* internal_default_instance() {
    return reinterpret_cast<const CreateShardResponse*>(
               &_CreateShardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateShardResponse* other);
  friend void swap(CreateShardResponse& a, CreateShardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateShardResponse* New() const final {
    return CreateMaybeMessage<CreateShardResponse>(NULL);
  }

  CreateShardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateShardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateShardResponse& from);
  void MergeFrom(const CreateShardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateShardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:elasticfaiss.CreateShardResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  bool success_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteShardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.DeleteShardRequest) */ {
 public:
  DeleteShardRequest();
  virtual ~DeleteShardRequest();

  DeleteShardRequest(const DeleteShardRequest& from);

  inline DeleteShardRequest& operator=(const DeleteShardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteShardRequest(DeleteShardRequest&& from) noexcept
    : DeleteShardRequest() {
    *this = ::std::move(from);
  }

  inline DeleteShardRequest& operator=(DeleteShardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteShardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteShardRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteShardRequest*>(
               &_DeleteShardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DeleteShardRequest* other);
  friend void swap(DeleteShardRequest& a, DeleteShardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteShardRequest* New() const final {
    return CreateMaybeMessage<DeleteShardRequest>(NULL);
  }

  DeleteShardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteShardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteShardRequest& from);
  void MergeFrom(const DeleteShardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteShardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 idx = 2;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 2;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:elasticfaiss.DeleteShardRequest)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_idx();
  void clear_has_idx();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 idx_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteShardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.DeleteShardResponse) */ {
 public:
  DeleteShardResponse();
  virtual ~DeleteShardResponse();

  DeleteShardResponse(const DeleteShardResponse& from);

  inline DeleteShardResponse& operator=(const DeleteShardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteShardResponse(DeleteShardResponse&& from) noexcept
    : DeleteShardResponse() {
    *this = ::std::move(from);
  }

  inline DeleteShardResponse& operator=(DeleteShardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteShardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteShardResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteShardResponse*>(
               &_DeleteShardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DeleteShardResponse* other);
  friend void swap(DeleteShardResponse& a, DeleteShardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteShardResponse* New() const final {
    return CreateMaybeMessage<DeleteShardResponse>(NULL);
  }

  DeleteShardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteShardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteShardResponse& from);
  void MergeFrom(const DeleteShardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteShardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:elasticfaiss.DeleteShardResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  bool success_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShardPutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.ShardPutRequest) */ {
 public:
  ShardPutRequest();
  virtual ~ShardPutRequest();

  ShardPutRequest(const ShardPutRequest& from);

  inline ShardPutRequest& operator=(const ShardPutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShardPutRequest(ShardPutRequest&& from) noexcept
    : ShardPutRequest() {
    *this = ::std::move(from);
  }

  inline ShardPutRequest& operator=(ShardPutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardPutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShardPutRequest* internal_default_instance() {
    return reinterpret_cast<const ShardPutRequest*>(
               &_ShardPutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ShardPutRequest* other);
  friend void swap(ShardPutRequest& a, ShardPutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShardPutRequest* New() const final {
    return CreateMaybeMessage<ShardPutRequest>(NULL);
  }

  ShardPutRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShardPutRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShardPutRequest& from);
  void MergeFrom(const ShardPutRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShardPutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 idx = 2;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 2;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:elasticfaiss.ShardPutRequest)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_idx();
  void clear_has_idx();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 idx_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShardPutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.ShardPutResponse) */ {
 public:
  ShardPutResponse();
  virtual ~ShardPutResponse();

  ShardPutResponse(const ShardPutResponse& from);

  inline ShardPutResponse& operator=(const ShardPutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShardPutResponse(ShardPutResponse&& from) noexcept
    : ShardPutResponse() {
    *this = ::std::move(from);
  }

  inline ShardPutResponse& operator=(ShardPutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardPutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShardPutResponse* internal_default_instance() {
    return reinterpret_cast<const ShardPutResponse*>(
               &_ShardPutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ShardPutResponse* other);
  friend void swap(ShardPutResponse& a, ShardPutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShardPutResponse* New() const final {
    return CreateMaybeMessage<ShardPutResponse>(NULL);
  }

  ShardPutResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShardPutResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShardPutResponse& from);
  void MergeFrom(const ShardPutResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShardPutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string redirect = 2;
  bool has_redirect() const;
  void clear_redirect();
  static const int kRedirectFieldNumber = 2;
  const ::std::string& redirect() const;
  void set_redirect(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect(::std::string&& value);
  #endif
  void set_redirect(const char* value);
  void set_redirect(const char* value, size_t size);
  ::std::string* mutable_redirect();
  ::std::string* release_redirect();
  void set_allocated_redirect(::std::string* redirect);

  // optional string error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:elasticfaiss.ShardPutResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_redirect();
  void clear_has_redirect();
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr redirect_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  bool success_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShardRebuildRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.ShardRebuildRequest) */ {
 public:
  ShardRebuildRequest();
  virtual ~ShardRebuildRequest();

  ShardRebuildRequest(const ShardRebuildRequest& from);

  inline ShardRebuildRequest& operator=(const ShardRebuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShardRebuildRequest(ShardRebuildRequest&& from) noexcept
    : ShardRebuildRequest() {
    *this = ::std::move(from);
  }

  inline ShardRebuildRequest& operator=(ShardRebuildRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardRebuildRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShardRebuildRequest* internal_default_instance() {
    return reinterpret_cast<const ShardRebuildRequest*>(
               &_ShardRebuildRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ShardRebuildRequest* other);
  friend void swap(ShardRebuildRequest& a, ShardRebuildRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShardRebuildRequest* New() const final {
    return CreateMaybeMessage<ShardRebuildRequest>(NULL);
  }

  ShardRebuildRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShardRebuildRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShardRebuildRequest& from);
  void MergeFrom(const ShardRebuildRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShardRebuildRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 idx = 2;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 2;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:elasticfaiss.ShardRebuildRequest)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_idx();
  void clear_has_idx();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 idx_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShardRebuildResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:elasticfaiss.ShardRebuildResponse) */ {
 public:
  ShardRebuildResponse();
  virtual ~ShardRebuildResponse();

  ShardRebuildResponse(const ShardRebuildResponse& from);

  inline ShardRebuildResponse& operator=(const ShardRebuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShardRebuildResponse(ShardRebuildResponse&& from) noexcept
    : ShardRebuildResponse() {
    *this = ::std::move(from);
  }

  inline ShardRebuildResponse& operator=(ShardRebuildResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardRebuildResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShardRebuildResponse* internal_default_instance() {
    return reinterpret_cast<const ShardRebuildResponse*>(
               &_ShardRebuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ShardRebuildResponse* other);
  friend void swap(ShardRebuildResponse& a, ShardRebuildResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShardRebuildResponse* New() const final {
    return CreateMaybeMessage<ShardRebuildResponse>(NULL);
  }

  ShardRebuildResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShardRebuildResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShardRebuildResponse& from);
  void MergeFrom(const ShardRebuildResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShardRebuildResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string redirect = 2;
  bool has_redirect() const;
  void clear_redirect();
  static const int kRedirectFieldNumber = 2;
  const ::std::string& redirect() const;
  void set_redirect(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect(::std::string&& value);
  #endif
  void set_redirect(const char* value);
  void set_redirect(const char* value, size_t size);
  ::std::string* mutable_redirect();
  ::std::string* release_redirect();
  void set_allocated_redirect(::std::string* redirect);

  // optional string error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:elasticfaiss.ShardRebuildResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_redirect();
  void clear_has_redirect();
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr redirect_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  bool success_;
  friend struct ::protobuf_work_5fnode_2eproto::TableStruct;
};
// ===================================================================

class WorkNodeService_Stub;

class WorkNodeService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline WorkNodeService() {};
 public:
  virtual ~WorkNodeService();

  typedef WorkNodeService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void create_shard(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::CreateShardRequest* request,
                       ::elasticfaiss::CreateShardResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void delete_shard(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::DeleteShardRequest* request,
                       ::elasticfaiss::DeleteShardResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void rebuild(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::ShardRebuildRequest* request,
                       ::elasticfaiss::ShardRebuildResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void put(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::ShardPutRequest* request,
                       ::elasticfaiss::ShardPutResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(WorkNodeService);
};

class WorkNodeService_Stub : public WorkNodeService {
 public:
  WorkNodeService_Stub(::google::protobuf::RpcChannel* channel);
  WorkNodeService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~WorkNodeService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements WorkNodeService ------------------------------------------

  void create_shard(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::CreateShardRequest* request,
                       ::elasticfaiss::CreateShardResponse* response,
                       ::google::protobuf::Closure* done);
  void delete_shard(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::DeleteShardRequest* request,
                       ::elasticfaiss::DeleteShardResponse* response,
                       ::google::protobuf::Closure* done);
  void rebuild(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::ShardRebuildRequest* request,
                       ::elasticfaiss::ShardRebuildResponse* response,
                       ::google::protobuf::Closure* done);
  void put(::google::protobuf::RpcController* controller,
                       const ::elasticfaiss::ShardPutRequest* request,
                       ::elasticfaiss::ShardPutResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(WorkNodeService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateShardRequest

// required .elasticfaiss.IndexShardConf conf = 1;
inline bool CreateShardRequest::has_conf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateShardRequest::set_has_conf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateShardRequest::clear_has_conf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::elasticfaiss::IndexShardConf& CreateShardRequest::_internal_conf() const {
  return *conf_;
}
inline const ::elasticfaiss::IndexShardConf& CreateShardRequest::conf() const {
  const ::elasticfaiss::IndexShardConf* p = conf_;
  // @@protoc_insertion_point(field_get:elasticfaiss.CreateShardRequest.conf)
  return p != NULL ? *p : *reinterpret_cast<const ::elasticfaiss::IndexShardConf*>(
      &::elasticfaiss::_IndexShardConf_default_instance_);
}
inline ::elasticfaiss::IndexShardConf* CreateShardRequest::release_conf() {
  // @@protoc_insertion_point(field_release:elasticfaiss.CreateShardRequest.conf)
  clear_has_conf();
  ::elasticfaiss::IndexShardConf* temp = conf_;
  conf_ = NULL;
  return temp;
}
inline ::elasticfaiss::IndexShardConf* CreateShardRequest::mutable_conf() {
  set_has_conf();
  if (conf_ == NULL) {
    auto* p = CreateMaybeMessage<::elasticfaiss::IndexShardConf>(GetArenaNoVirtual());
    conf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:elasticfaiss.CreateShardRequest.conf)
  return conf_;
}
inline void CreateShardRequest::set_allocated_conf(::elasticfaiss::IndexShardConf* conf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(conf_);
  }
  if (conf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      conf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conf, submessage_arena);
    }
    set_has_conf();
  } else {
    clear_has_conf();
  }
  conf_ = conf;
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.CreateShardRequest.conf)
}

// -------------------------------------------------------------------

// CreateShardResponse

// required bool success = 1;
inline bool CreateShardResponse::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateShardResponse::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateShardResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateShardResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CreateShardResponse::success() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.CreateShardResponse.success)
  return success_;
}
inline void CreateShardResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:elasticfaiss.CreateShardResponse.success)
}

// optional string error = 3;
inline bool CreateShardResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateShardResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateShardResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateShardResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& CreateShardResponse::error() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.CreateShardResponse.error)
  return error_.GetNoArena();
}
inline void CreateShardResponse::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.CreateShardResponse.error)
}
#if LANG_CXX11
inline void CreateShardResponse::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.CreateShardResponse.error)
}
#endif
inline void CreateShardResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.CreateShardResponse.error)
}
inline void CreateShardResponse::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.CreateShardResponse.error)
}
inline ::std::string* CreateShardResponse::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.CreateShardResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateShardResponse::release_error() {
  // @@protoc_insertion_point(field_release:elasticfaiss.CreateShardResponse.error)
  if (!has_error()) {
    return NULL;
  }
  clear_has_error();
  return error_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateShardResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.CreateShardResponse.error)
}

// -------------------------------------------------------------------

// DeleteShardRequest

// required string name = 1;
inline bool DeleteShardRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteShardRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteShardRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteShardRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DeleteShardRequest::name() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.DeleteShardRequest.name)
  return name_.GetNoArena();
}
inline void DeleteShardRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.DeleteShardRequest.name)
}
#if LANG_CXX11
inline void DeleteShardRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.DeleteShardRequest.name)
}
#endif
inline void DeleteShardRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.DeleteShardRequest.name)
}
inline void DeleteShardRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.DeleteShardRequest.name)
}
inline ::std::string* DeleteShardRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.DeleteShardRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteShardRequest::release_name() {
  // @@protoc_insertion_point(field_release:elasticfaiss.DeleteShardRequest.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteShardRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.DeleteShardRequest.name)
}

// required int32 idx = 2;
inline bool DeleteShardRequest::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteShardRequest::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteShardRequest::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteShardRequest::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 DeleteShardRequest::idx() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.DeleteShardRequest.idx)
  return idx_;
}
inline void DeleteShardRequest::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:elasticfaiss.DeleteShardRequest.idx)
}

// -------------------------------------------------------------------

// DeleteShardResponse

// required bool success = 1;
inline bool DeleteShardResponse::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteShardResponse::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteShardResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteShardResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool DeleteShardResponse::success() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.DeleteShardResponse.success)
  return success_;
}
inline void DeleteShardResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:elasticfaiss.DeleteShardResponse.success)
}

// optional string error = 3;
inline bool DeleteShardResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteShardResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteShardResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteShardResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& DeleteShardResponse::error() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.DeleteShardResponse.error)
  return error_.GetNoArena();
}
inline void DeleteShardResponse::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.DeleteShardResponse.error)
}
#if LANG_CXX11
inline void DeleteShardResponse::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.DeleteShardResponse.error)
}
#endif
inline void DeleteShardResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.DeleteShardResponse.error)
}
inline void DeleteShardResponse::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.DeleteShardResponse.error)
}
inline ::std::string* DeleteShardResponse::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.DeleteShardResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteShardResponse::release_error() {
  // @@protoc_insertion_point(field_release:elasticfaiss.DeleteShardResponse.error)
  if (!has_error()) {
    return NULL;
  }
  clear_has_error();
  return error_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteShardResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.DeleteShardResponse.error)
}

// -------------------------------------------------------------------

// ShardPutRequest

// required string name = 1;
inline bool ShardPutRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShardPutRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShardPutRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShardPutRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ShardPutRequest::name() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardPutRequest.name)
  return name_.GetNoArena();
}
inline void ShardPutRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardPutRequest.name)
}
#if LANG_CXX11
inline void ShardPutRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.ShardPutRequest.name)
}
#endif
inline void ShardPutRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.ShardPutRequest.name)
}
inline void ShardPutRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.ShardPutRequest.name)
}
inline ::std::string* ShardPutRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.ShardPutRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShardPutRequest::release_name() {
  // @@protoc_insertion_point(field_release:elasticfaiss.ShardPutRequest.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShardPutRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.ShardPutRequest.name)
}

// required int32 idx = 2;
inline bool ShardPutRequest::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShardPutRequest::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShardPutRequest::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShardPutRequest::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 ShardPutRequest::idx() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardPutRequest.idx)
  return idx_;
}
inline void ShardPutRequest::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardPutRequest.idx)
}

// -------------------------------------------------------------------

// ShardPutResponse

// required bool success = 1;
inline bool ShardPutResponse::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShardPutResponse::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShardPutResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShardPutResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool ShardPutResponse::success() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardPutResponse.success)
  return success_;
}
inline void ShardPutResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardPutResponse.success)
}

// optional string redirect = 2;
inline bool ShardPutResponse::has_redirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShardPutResponse::set_has_redirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShardPutResponse::clear_has_redirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShardPutResponse::clear_redirect() {
  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect();
}
inline const ::std::string& ShardPutResponse::redirect() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardPutResponse.redirect)
  return redirect_.GetNoArena();
}
inline void ShardPutResponse::set_redirect(const ::std::string& value) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardPutResponse.redirect)
}
#if LANG_CXX11
inline void ShardPutResponse::set_redirect(::std::string&& value) {
  set_has_redirect();
  redirect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.ShardPutResponse.redirect)
}
#endif
inline void ShardPutResponse::set_redirect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.ShardPutResponse.redirect)
}
inline void ShardPutResponse::set_redirect(const char* value, size_t size) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.ShardPutResponse.redirect)
}
inline ::std::string* ShardPutResponse::mutable_redirect() {
  set_has_redirect();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.ShardPutResponse.redirect)
  return redirect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShardPutResponse::release_redirect() {
  // @@protoc_insertion_point(field_release:elasticfaiss.ShardPutResponse.redirect)
  if (!has_redirect()) {
    return NULL;
  }
  clear_has_redirect();
  return redirect_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShardPutResponse::set_allocated_redirect(::std::string* redirect) {
  if (redirect != NULL) {
    set_has_redirect();
  } else {
    clear_has_redirect();
  }
  redirect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.ShardPutResponse.redirect)
}

// optional string error = 3;
inline bool ShardPutResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShardPutResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShardPutResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShardPutResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& ShardPutResponse::error() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardPutResponse.error)
  return error_.GetNoArena();
}
inline void ShardPutResponse::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardPutResponse.error)
}
#if LANG_CXX11
inline void ShardPutResponse::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.ShardPutResponse.error)
}
#endif
inline void ShardPutResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.ShardPutResponse.error)
}
inline void ShardPutResponse::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.ShardPutResponse.error)
}
inline ::std::string* ShardPutResponse::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.ShardPutResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShardPutResponse::release_error() {
  // @@protoc_insertion_point(field_release:elasticfaiss.ShardPutResponse.error)
  if (!has_error()) {
    return NULL;
  }
  clear_has_error();
  return error_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShardPutResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.ShardPutResponse.error)
}

// -------------------------------------------------------------------

// ShardRebuildRequest

// required string name = 1;
inline bool ShardRebuildRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShardRebuildRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShardRebuildRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShardRebuildRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ShardRebuildRequest::name() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardRebuildRequest.name)
  return name_.GetNoArena();
}
inline void ShardRebuildRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardRebuildRequest.name)
}
#if LANG_CXX11
inline void ShardRebuildRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.ShardRebuildRequest.name)
}
#endif
inline void ShardRebuildRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.ShardRebuildRequest.name)
}
inline void ShardRebuildRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.ShardRebuildRequest.name)
}
inline ::std::string* ShardRebuildRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.ShardRebuildRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShardRebuildRequest::release_name() {
  // @@protoc_insertion_point(field_release:elasticfaiss.ShardRebuildRequest.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShardRebuildRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.ShardRebuildRequest.name)
}

// required int32 idx = 2;
inline bool ShardRebuildRequest::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShardRebuildRequest::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShardRebuildRequest::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShardRebuildRequest::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 ShardRebuildRequest::idx() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardRebuildRequest.idx)
  return idx_;
}
inline void ShardRebuildRequest::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardRebuildRequest.idx)
}

// -------------------------------------------------------------------

// ShardRebuildResponse

// required bool success = 1;
inline bool ShardRebuildResponse::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShardRebuildResponse::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShardRebuildResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShardRebuildResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool ShardRebuildResponse::success() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardRebuildResponse.success)
  return success_;
}
inline void ShardRebuildResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardRebuildResponse.success)
}

// optional string redirect = 2;
inline bool ShardRebuildResponse::has_redirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShardRebuildResponse::set_has_redirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShardRebuildResponse::clear_has_redirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShardRebuildResponse::clear_redirect() {
  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect();
}
inline const ::std::string& ShardRebuildResponse::redirect() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardRebuildResponse.redirect)
  return redirect_.GetNoArena();
}
inline void ShardRebuildResponse::set_redirect(const ::std::string& value) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardRebuildResponse.redirect)
}
#if LANG_CXX11
inline void ShardRebuildResponse::set_redirect(::std::string&& value) {
  set_has_redirect();
  redirect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.ShardRebuildResponse.redirect)
}
#endif
inline void ShardRebuildResponse::set_redirect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.ShardRebuildResponse.redirect)
}
inline void ShardRebuildResponse::set_redirect(const char* value, size_t size) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.ShardRebuildResponse.redirect)
}
inline ::std::string* ShardRebuildResponse::mutable_redirect() {
  set_has_redirect();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.ShardRebuildResponse.redirect)
  return redirect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShardRebuildResponse::release_redirect() {
  // @@protoc_insertion_point(field_release:elasticfaiss.ShardRebuildResponse.redirect)
  if (!has_redirect()) {
    return NULL;
  }
  clear_has_redirect();
  return redirect_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShardRebuildResponse::set_allocated_redirect(::std::string* redirect) {
  if (redirect != NULL) {
    set_has_redirect();
  } else {
    clear_has_redirect();
  }
  redirect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.ShardRebuildResponse.redirect)
}

// optional string error = 3;
inline bool ShardRebuildResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShardRebuildResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShardRebuildResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShardRebuildResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& ShardRebuildResponse::error() const {
  // @@protoc_insertion_point(field_get:elasticfaiss.ShardRebuildResponse.error)
  return error_.GetNoArena();
}
inline void ShardRebuildResponse::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:elasticfaiss.ShardRebuildResponse.error)
}
#if LANG_CXX11
inline void ShardRebuildResponse::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:elasticfaiss.ShardRebuildResponse.error)
}
#endif
inline void ShardRebuildResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:elasticfaiss.ShardRebuildResponse.error)
}
inline void ShardRebuildResponse::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:elasticfaiss.ShardRebuildResponse.error)
}
inline ::std::string* ShardRebuildResponse::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:elasticfaiss.ShardRebuildResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShardRebuildResponse::release_error() {
  // @@protoc_insertion_point(field_release:elasticfaiss.ShardRebuildResponse.error)
  if (!has_error()) {
    return NULL;
  }
  clear_has_error();
  return error_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShardRebuildResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:elasticfaiss.ShardRebuildResponse.error)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace elasticfaiss

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_work_5fnode_2eproto
