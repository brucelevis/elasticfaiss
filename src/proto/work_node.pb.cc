// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: work_node.proto

#include "work_node.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_shard_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_shard_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IndexShardConf;
}  // namespace protobuf_shard_2eproto
namespace elasticfaiss {
class CreateShardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateShardRequest>
      _instance;
} _CreateShardRequest_default_instance_;
class CreateShardResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateShardResponse>
      _instance;
} _CreateShardResponse_default_instance_;
class DeleteShardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteShardRequest>
      _instance;
} _DeleteShardRequest_default_instance_;
class DeleteShardResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteShardResponse>
      _instance;
} _DeleteShardResponse_default_instance_;
}  // namespace elasticfaiss
namespace protobuf_work_5fnode_2eproto {
static void InitDefaultsCreateShardRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_CreateShardRequest_default_instance_;
    new (ptr) ::elasticfaiss::CreateShardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::CreateShardRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateShardRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateShardRequest}, {
      &protobuf_shard_2eproto::scc_info_IndexShardConf.base,}};

static void InitDefaultsCreateShardResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_CreateShardResponse_default_instance_;
    new (ptr) ::elasticfaiss::CreateShardResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::CreateShardResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateShardResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateShardResponse}, {}};

static void InitDefaultsDeleteShardRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_DeleteShardRequest_default_instance_;
    new (ptr) ::elasticfaiss::DeleteShardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::DeleteShardRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteShardRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteShardRequest}, {}};

static void InitDefaultsDeleteShardResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_DeleteShardResponse_default_instance_;
    new (ptr) ::elasticfaiss::DeleteShardResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::DeleteShardResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteShardResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteShardResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateShardRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateShardResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteShardRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteShardResponse.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateShardRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateShardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateShardRequest, conf_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateShardResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateShardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateShardResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateShardResponse, error_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardRequest, idx_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteShardResponse, error_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::elasticfaiss::CreateShardRequest)},
  { 7, 14, sizeof(::elasticfaiss::CreateShardResponse)},
  { 16, 23, sizeof(::elasticfaiss::DeleteShardRequest)},
  { 25, 32, sizeof(::elasticfaiss::DeleteShardResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_CreateShardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_CreateShardResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_DeleteShardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_DeleteShardResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "work_node.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017work_node.proto\022\014elasticfaiss\032\013shard.p"
      "roto\"@\n\022CreateShardRequest\022*\n\004conf\030\001 \002(\013"
      "2\034.elasticfaiss.IndexShardConf\"5\n\023Create"
      "ShardResponse\022\017\n\007success\030\001 \002(\010\022\r\n\005error\030"
      "\003 \001(\t\"/\n\022DeleteShardRequest\022\014\n\004name\030\001 \002("
      "\t\022\013\n\003idx\030\002 \002(\005\"5\n\023DeleteShardResponse\022\017\n"
      "\007success\030\001 \002(\010\022\r\n\005error\030\003 \001(\t2\273\001\n\017WorkNo"
      "deService\022S\n\014create_shard\022 .elasticfaiss"
      ".CreateShardRequest\032!.elasticfaiss.Creat"
      "eShardResponse\022S\n\014delete_shard\022 .elastic"
      "faiss.DeleteShardRequest\032!.elasticfaiss."
      "DeleteShardResponseB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 464);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "work_node.proto", &protobuf_RegisterTypes);
  ::protobuf_shard_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_work_5fnode_2eproto
namespace elasticfaiss {

// ===================================================================

void CreateShardRequest::InitAsDefaultInstance() {
  ::elasticfaiss::_CreateShardRequest_default_instance_._instance.get_mutable()->conf_ = const_cast< ::elasticfaiss::IndexShardConf*>(
      ::elasticfaiss::IndexShardConf::internal_default_instance());
}
void CreateShardRequest::clear_conf() {
  if (conf_ != NULL) conf_->Clear();
  clear_has_conf();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateShardRequest::kConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateShardRequest::CreateShardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_work_5fnode_2eproto::scc_info_CreateShardRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.CreateShardRequest)
}
CreateShardRequest::CreateShardRequest(const CreateShardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conf()) {
    conf_ = new ::elasticfaiss::IndexShardConf(*from.conf_);
  } else {
    conf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.CreateShardRequest)
}

void CreateShardRequest::SharedCtor() {
  conf_ = NULL;
}

CreateShardRequest::~CreateShardRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.CreateShardRequest)
  SharedDtor();
}

void CreateShardRequest::SharedDtor() {
  if (this != internal_default_instance()) delete conf_;
}

void CreateShardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateShardRequest::descriptor() {
  ::protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateShardRequest& CreateShardRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_work_5fnode_2eproto::scc_info_CreateShardRequest.base);
  return *internal_default_instance();
}


void CreateShardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.CreateShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(conf_ != NULL);
    conf_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateShardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.CreateShardRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .elasticfaiss.IndexShardConf conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.CreateShardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.CreateShardRequest)
  return false;
#undef DO_
}

void CreateShardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.CreateShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.IndexShardConf conf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_conf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.CreateShardRequest)
}

::google::protobuf::uint8* CreateShardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.CreateShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.IndexShardConf conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_conf(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.CreateShardRequest)
  return target;
}

size_t CreateShardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.CreateShardRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .elasticfaiss.IndexShardConf conf = 1;
  if (has_conf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conf_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateShardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.CreateShardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateShardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateShardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.CreateShardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.CreateShardRequest)
    MergeFrom(*source);
  }
}

void CreateShardRequest::MergeFrom(const CreateShardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.CreateShardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conf()) {
    mutable_conf()->::elasticfaiss::IndexShardConf::MergeFrom(from.conf());
  }
}

void CreateShardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.CreateShardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateShardRequest::CopyFrom(const CreateShardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.CreateShardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateShardRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_conf()) {
    if (!this->conf_->IsInitialized()) return false;
  }
  return true;
}

void CreateShardRequest::Swap(CreateShardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateShardRequest::InternalSwap(CreateShardRequest* other) {
  using std::swap;
  swap(conf_, other->conf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateShardRequest::GetMetadata() const {
  protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateShardResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateShardResponse::kSuccessFieldNumber;
const int CreateShardResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateShardResponse::CreateShardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_work_5fnode_2eproto::scc_info_CreateShardResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.CreateShardResponse)
}
CreateShardResponse::CreateShardResponse(const CreateShardResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.CreateShardResponse)
}

void CreateShardResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

CreateShardResponse::~CreateShardResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.CreateShardResponse)
  SharedDtor();
}

void CreateShardResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateShardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateShardResponse::descriptor() {
  ::protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateShardResponse& CreateShardResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_work_5fnode_2eproto::scc_info_CreateShardResponse.base);
  return *internal_default_instance();
}


void CreateShardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.CreateShardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateShardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.CreateShardResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.CreateShardResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.CreateShardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.CreateShardResponse)
  return false;
#undef DO_
}

void CreateShardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.CreateShardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.CreateShardResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.CreateShardResponse)
}

::google::protobuf::uint8* CreateShardResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.CreateShardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.CreateShardResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.CreateShardResponse)
  return target;
}

size_t CreateShardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.CreateShardResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // optional string error = 3;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateShardResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.CreateShardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateShardResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateShardResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.CreateShardResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.CreateShardResponse)
    MergeFrom(*source);
  }
}

void CreateShardResponse::MergeFrom(const CreateShardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.CreateShardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateShardResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.CreateShardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateShardResponse::CopyFrom(const CreateShardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.CreateShardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateShardResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void CreateShardResponse::Swap(CreateShardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateShardResponse::InternalSwap(CreateShardResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateShardResponse::GetMetadata() const {
  protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteShardRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteShardRequest::kNameFieldNumber;
const int DeleteShardRequest::kIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteShardRequest::DeleteShardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_work_5fnode_2eproto::scc_info_DeleteShardRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.DeleteShardRequest)
}
DeleteShardRequest::DeleteShardRequest(const DeleteShardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.DeleteShardRequest)
}

void DeleteShardRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idx_ = 0;
}

DeleteShardRequest::~DeleteShardRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.DeleteShardRequest)
  SharedDtor();
}

void DeleteShardRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteShardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteShardRequest::descriptor() {
  ::protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteShardRequest& DeleteShardRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_work_5fnode_2eproto::scc_info_DeleteShardRequest.base);
  return *internal_default_instance();
}


void DeleteShardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.DeleteShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  idx_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteShardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.DeleteShardRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.DeleteShardRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.DeleteShardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.DeleteShardRequest)
  return false;
#undef DO_
}

void DeleteShardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.DeleteShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteShardRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 idx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.DeleteShardRequest)
}

::google::protobuf::uint8* DeleteShardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.DeleteShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteShardRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 idx = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.DeleteShardRequest)
  return target;
}

size_t DeleteShardRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:elasticfaiss.DeleteShardRequest)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_idx()) {
    // required int32 idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());
  }

  return total_size;
}
size_t DeleteShardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.DeleteShardRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteShardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.DeleteShardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteShardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteShardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.DeleteShardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.DeleteShardRequest)
    MergeFrom(*source);
  }
}

void DeleteShardRequest::MergeFrom(const DeleteShardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.DeleteShardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      idx_ = from.idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeleteShardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.DeleteShardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteShardRequest::CopyFrom(const DeleteShardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.DeleteShardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteShardRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DeleteShardRequest::Swap(DeleteShardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteShardRequest::InternalSwap(DeleteShardRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(idx_, other->idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteShardRequest::GetMetadata() const {
  protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteShardResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteShardResponse::kSuccessFieldNumber;
const int DeleteShardResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteShardResponse::DeleteShardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_work_5fnode_2eproto::scc_info_DeleteShardResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.DeleteShardResponse)
}
DeleteShardResponse::DeleteShardResponse(const DeleteShardResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.DeleteShardResponse)
}

void DeleteShardResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

DeleteShardResponse::~DeleteShardResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.DeleteShardResponse)
  SharedDtor();
}

void DeleteShardResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteShardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteShardResponse::descriptor() {
  ::protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteShardResponse& DeleteShardResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_work_5fnode_2eproto::scc_info_DeleteShardResponse.base);
  return *internal_default_instance();
}


void DeleteShardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.DeleteShardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteShardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.DeleteShardResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.DeleteShardResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.DeleteShardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.DeleteShardResponse)
  return false;
#undef DO_
}

void DeleteShardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.DeleteShardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteShardResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.DeleteShardResponse)
}

::google::protobuf::uint8* DeleteShardResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.DeleteShardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteShardResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.DeleteShardResponse)
  return target;
}

size_t DeleteShardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.DeleteShardResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // optional string error = 3;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteShardResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.DeleteShardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteShardResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteShardResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.DeleteShardResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.DeleteShardResponse)
    MergeFrom(*source);
  }
}

void DeleteShardResponse::MergeFrom(const DeleteShardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.DeleteShardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeleteShardResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.DeleteShardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteShardResponse::CopyFrom(const DeleteShardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.DeleteShardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteShardResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void DeleteShardResponse::Swap(DeleteShardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteShardResponse::InternalSwap(DeleteShardResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteShardResponse::GetMetadata() const {
  protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_work_5fnode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

WorkNodeService::~WorkNodeService() {}

const ::google::protobuf::ServiceDescriptor* WorkNodeService::descriptor() {
  protobuf_work_5fnode_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_work_5fnode_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* WorkNodeService::GetDescriptor() {
  return descriptor();
}

void WorkNodeService::create_shard(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::CreateShardRequest*,
                         ::elasticfaiss::CreateShardResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method create_shard() not implemented.");
  done->Run();
}

void WorkNodeService::delete_shard(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::DeleteShardRequest*,
                         ::elasticfaiss::DeleteShardResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method delete_shard() not implemented.");
  done->Run();
}

void WorkNodeService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_work_5fnode_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      create_shard(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::CreateShardRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::CreateShardResponse*>(response),
             done);
      break;
    case 1:
      delete_shard(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::DeleteShardRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::DeleteShardResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& WorkNodeService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::elasticfaiss::CreateShardRequest::default_instance();
    case 1:
      return ::elasticfaiss::DeleteShardRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& WorkNodeService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::elasticfaiss::CreateShardResponse::default_instance();
    case 1:
      return ::elasticfaiss::DeleteShardResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

WorkNodeService_Stub::WorkNodeService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
WorkNodeService_Stub::WorkNodeService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
WorkNodeService_Stub::~WorkNodeService_Stub() {
  if (owns_channel_) delete channel_;
}

void WorkNodeService_Stub::create_shard(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::CreateShardRequest* request,
                              ::elasticfaiss::CreateShardResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void WorkNodeService_Stub::delete_shard(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::DeleteShardRequest* request,
                              ::elasticfaiss::DeleteShardResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace elasticfaiss
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::CreateShardRequest* Arena::CreateMaybeMessage< ::elasticfaiss::CreateShardRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::CreateShardRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::CreateShardResponse* Arena::CreateMaybeMessage< ::elasticfaiss::CreateShardResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::CreateShardResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::DeleteShardRequest* Arena::CreateMaybeMessage< ::elasticfaiss::DeleteShardRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::DeleteShardRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::DeleteShardResponse* Arena::CreateMaybeMessage< ::elasticfaiss::DeleteShardResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::DeleteShardResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
