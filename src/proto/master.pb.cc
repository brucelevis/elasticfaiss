// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

#include "master.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_master_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_master_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClusterSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_master_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClusterState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_master_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WorkNode;
}  // namespace protobuf_master_2eproto
namespace protobuf_shard_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_shard_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IndexConf;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_shard_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Shard;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_shard_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IndexShardConf;
}  // namespace protobuf_shard_2eproto
namespace elasticfaiss {
class ClusterSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterSettings>
      _instance;
} _ClusterSettings_default_instance_;
class WorkNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkNode>
      _instance;
} _WorkNode_default_instance_;
class ClusterStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterState>
      _instance;
} _ClusterState_default_instance_;
class MasterSnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterSnapshot>
      _instance;
} _MasterSnapshot_default_instance_;
class BootstrapRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BootstrapRequest>
      _instance;
} _BootstrapRequest_default_instance_;
class BootstrapResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BootstrapResponse>
      _instance;
} _BootstrapResponse_default_instance_;
class NodeHeartbeatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeHeartbeatRequest>
      _instance;
} _NodeHeartbeatRequest_default_instance_;
class NodeHeartbeatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeHeartbeatResponse>
      _instance;
} _NodeHeartbeatResponse_default_instance_;
class GetClusterStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetClusterStateRequest>
      _instance;
} _GetClusterStateRequest_default_instance_;
class GetClusterStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetClusterStateResponse>
      _instance;
} _GetClusterStateResponse_default_instance_;
class CreateIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexRequest>
      _instance;
} _CreateIndexRequest_default_instance_;
class CreateIndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexResponse>
      _instance;
} _CreateIndexResponse_default_instance_;
class DeleteIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexRequest>
      _instance;
} _DeleteIndexRequest_default_instance_;
class DeleteIndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexResponse>
      _instance;
} _DeleteIndexResponse_default_instance_;
class UpdateIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateIndexRequest>
      _instance;
} _UpdateIndexRequest_default_instance_;
class UpdateIndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateIndexResponse>
      _instance;
} _UpdateIndexResponse_default_instance_;
class UpdateNodeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNodeRequest>
      _instance;
} _UpdateNodeRequest_default_instance_;
class UpdateNodeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNodeResponse>
      _instance;
} _UpdateNodeResponse_default_instance_;
class UpdateClusterSettingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterSettingRequest>
      _instance;
} _UpdateClusterSettingRequest_default_instance_;
class UpdateClusterSettingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterSettingResponse>
      _instance;
} _UpdateClusterSettingResponse_default_instance_;
}  // namespace elasticfaiss
namespace protobuf_master_2eproto {
static void InitDefaultsClusterSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_ClusterSettings_default_instance_;
    new (ptr) ::elasticfaiss::ClusterSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::ClusterSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClusterSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClusterSettings}, {}};

static void InitDefaultsWorkNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_WorkNode_default_instance_;
    new (ptr) ::elasticfaiss::WorkNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::WorkNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WorkNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWorkNode}, {
      &protobuf_shard_2eproto::scc_info_Shard.base,}};

static void InitDefaultsClusterState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_ClusterState_default_instance_;
    new (ptr) ::elasticfaiss::ClusterState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::ClusterState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClusterState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClusterState}, {
      &protobuf_master_2eproto::scc_info_WorkNode.base,}};

static void InitDefaultsMasterSnapshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_MasterSnapshot_default_instance_;
    new (ptr) ::elasticfaiss::MasterSnapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::MasterSnapshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MasterSnapshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMasterSnapshot}, {
      &protobuf_master_2eproto::scc_info_ClusterState.base,
      &protobuf_shard_2eproto::scc_info_IndexConf.base,
      &protobuf_master_2eproto::scc_info_ClusterSettings.base,}};

static void InitDefaultsBootstrapRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_BootstrapRequest_default_instance_;
    new (ptr) ::elasticfaiss::BootstrapRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::BootstrapRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BootstrapRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBootstrapRequest}, {}};

static void InitDefaultsBootstrapResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_BootstrapResponse_default_instance_;
    new (ptr) ::elasticfaiss::BootstrapResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::BootstrapResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BootstrapResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBootstrapResponse}, {
      &protobuf_master_2eproto::scc_info_WorkNode.base,
      &protobuf_shard_2eproto::scc_info_IndexShardConf.base,}};

static void InitDefaultsNodeHeartbeatRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_NodeHeartbeatRequest_default_instance_;
    new (ptr) ::elasticfaiss::NodeHeartbeatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::NodeHeartbeatRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NodeHeartbeatRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNodeHeartbeatRequest}, {
      &protobuf_shard_2eproto::scc_info_Shard.base,}};

static void InitDefaultsNodeHeartbeatResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_NodeHeartbeatResponse_default_instance_;
    new (ptr) ::elasticfaiss::NodeHeartbeatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::NodeHeartbeatResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NodeHeartbeatResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNodeHeartbeatResponse}, {
      &protobuf_master_2eproto::scc_info_WorkNode.base,}};

static void InitDefaultsGetClusterStateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_GetClusterStateRequest_default_instance_;
    new (ptr) ::elasticfaiss::GetClusterStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::GetClusterStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetClusterStateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetClusterStateRequest}, {}};

static void InitDefaultsGetClusterStateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_GetClusterStateResponse_default_instance_;
    new (ptr) ::elasticfaiss::GetClusterStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::GetClusterStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetClusterStateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetClusterStateResponse}, {
      &protobuf_master_2eproto::scc_info_ClusterState.base,}};

static void InitDefaultsCreateIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_CreateIndexRequest_default_instance_;
    new (ptr) ::elasticfaiss::CreateIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::CreateIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateIndexRequest}, {
      &protobuf_shard_2eproto::scc_info_IndexConf.base,}};

static void InitDefaultsCreateIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_CreateIndexResponse_default_instance_;
    new (ptr) ::elasticfaiss::CreateIndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::CreateIndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateIndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateIndexResponse}, {}};

static void InitDefaultsDeleteIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_DeleteIndexRequest_default_instance_;
    new (ptr) ::elasticfaiss::DeleteIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::DeleteIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteIndexRequest}, {}};

static void InitDefaultsDeleteIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_DeleteIndexResponse_default_instance_;
    new (ptr) ::elasticfaiss::DeleteIndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::DeleteIndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteIndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteIndexResponse}, {}};

static void InitDefaultsUpdateIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_UpdateIndexRequest_default_instance_;
    new (ptr) ::elasticfaiss::UpdateIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::UpdateIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateIndexRequest}, {
      &protobuf_shard_2eproto::scc_info_IndexConf.base,}};

static void InitDefaultsUpdateIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_UpdateIndexResponse_default_instance_;
    new (ptr) ::elasticfaiss::UpdateIndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::UpdateIndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateIndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateIndexResponse}, {}};

static void InitDefaultsUpdateNodeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_UpdateNodeRequest_default_instance_;
    new (ptr) ::elasticfaiss::UpdateNodeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::UpdateNodeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateNodeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateNodeRequest}, {
      &protobuf_shard_2eproto::scc_info_Shard.base,}};

static void InitDefaultsUpdateNodeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_UpdateNodeResponse_default_instance_;
    new (ptr) ::elasticfaiss::UpdateNodeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::UpdateNodeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateNodeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateNodeResponse}, {}};

static void InitDefaultsUpdateClusterSettingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_UpdateClusterSettingRequest_default_instance_;
    new (ptr) ::elasticfaiss::UpdateClusterSettingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::UpdateClusterSettingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateClusterSettingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateClusterSettingRequest}, {
      &protobuf_master_2eproto::scc_info_ClusterSettings.base,}};

static void InitDefaultsUpdateClusterSettingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticfaiss::_UpdateClusterSettingResponse_default_instance_;
    new (ptr) ::elasticfaiss::UpdateClusterSettingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticfaiss::UpdateClusterSettingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateClusterSettingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateClusterSettingResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterSnapshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BootstrapRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BootstrapResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeHeartbeatRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeHeartbeatResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetClusterStateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetClusterStateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateIndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteIndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateIndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateNodeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateNodeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateClusterSettingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateClusterSettingResponse.base);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterSettings, shard_allocation_after_timeout_secs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterSettings, total_shards_per_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterSettings, index_rpc_timeout_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterSettings, index_rpc_max_retry_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::WorkNode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::WorkNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::WorkNode, peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::WorkNode, last_active_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::WorkNode, last_state_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::WorkNode, shards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::WorkNode, state_),
  0,
  1,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterState, update_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::ClusterState, nodes_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::MasterSnapshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::MasterSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::MasterSnapshot, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::MasterSnapshot, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::MasterSnapshot, settings_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapRequest, node_peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapRequest, boot_ms_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapResponse, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::BootstrapResponse, shards_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatRequest, node_peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatRequest, active_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatRequest, shards_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::NodeHeartbeatResponse, nodes_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateRequest, cluster_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::GetClusterStateResponse, state_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexRequest, conf_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::CreateIndexResponse, error_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexRequest, index_name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::DeleteIndexResponse, error_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexRequest, conf_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateIndexResponse, error_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeRequest, peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeRequest, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeRequest, state_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeRequest, shards_),
  0,
  2,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateNodeResponse, error_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingRequest, settings_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::elasticfaiss::UpdateClusterSettingResponse, error_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::elasticfaiss::ClusterSettings)},
  { 13, 23, sizeof(::elasticfaiss::WorkNode)},
  { 28, 35, sizeof(::elasticfaiss::ClusterState)},
  { 37, 45, sizeof(::elasticfaiss::MasterSnapshot)},
  { 48, 55, sizeof(::elasticfaiss::BootstrapRequest)},
  { 57, 66, sizeof(::elasticfaiss::BootstrapResponse)},
  { 70, 78, sizeof(::elasticfaiss::NodeHeartbeatRequest)},
  { 81, 89, sizeof(::elasticfaiss::NodeHeartbeatResponse)},
  { 92, 98, sizeof(::elasticfaiss::GetClusterStateRequest)},
  { 99, 107, sizeof(::elasticfaiss::GetClusterStateResponse)},
  { 110, 116, sizeof(::elasticfaiss::CreateIndexRequest)},
  { 117, 125, sizeof(::elasticfaiss::CreateIndexResponse)},
  { 128, 134, sizeof(::elasticfaiss::DeleteIndexRequest)},
  { 135, 143, sizeof(::elasticfaiss::DeleteIndexResponse)},
  { 146, 152, sizeof(::elasticfaiss::UpdateIndexRequest)},
  { 153, 161, sizeof(::elasticfaiss::UpdateIndexResponse)},
  { 164, 173, sizeof(::elasticfaiss::UpdateNodeRequest)},
  { 177, 185, sizeof(::elasticfaiss::UpdateNodeResponse)},
  { 188, 194, sizeof(::elasticfaiss::UpdateClusterSettingRequest)},
  { 195, 203, sizeof(::elasticfaiss::UpdateClusterSettingResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_ClusterSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_WorkNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_ClusterState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_MasterSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_BootstrapRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_BootstrapResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_NodeHeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_NodeHeartbeatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_GetClusterStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_GetClusterStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_CreateIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_CreateIndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_DeleteIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_DeleteIndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_UpdateIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_UpdateIndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_UpdateNodeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_UpdateNodeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_UpdateClusterSettingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::elasticfaiss::_UpdateClusterSettingResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "master.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014master.proto\022\014elasticfaiss\032\013shard.prot"
      "o\"\252\001\n\017ClusterSettings\022/\n#shard_allocatio"
      "n_after_timeout_secs\030\001 \001(\005:\00260\022!\n\025total_"
      "shards_per_node\030\002 \001(\005:\002-1\022#\n\024index_rpc_t"
      "imeout_ms\030\003 \001(\005:\00510000\022\036\n\023index_rpc_max_"
      "retry\030\004 \001(\005:\0012\"~\n\010WorkNode\022\017\n\007peer_id\030\001 "
      "\002(\t\022\026\n\016last_active_ms\030\002 \001(\003\022\025\n\rlast_stat"
      "e_ms\030\003 \001(\003\022#\n\006shards\030\004 \003(\0132\023.elasticfais"
      "s.Shard\022\r\n\005state\030\005 \001(\005\"H\n\014ClusterState\022\021"
      "\n\tupdate_ms\030\001 \001(\003\022%\n\005nodes\030\002 \003(\0132\026.elast"
      "icfaiss.WorkNode\"\224\001\n\016MasterSnapshot\022)\n\005s"
      "tate\030\001 \001(\0132\032.elasticfaiss.ClusterState\022&"
      "\n\005index\030\002 \003(\0132\027.elasticfaiss.IndexConf\022/"
      "\n\010settings\030\003 \001(\0132\035.elasticfaiss.ClusterS"
      "ettings\"6\n\020BootstrapRequest\022\021\n\tnode_peer"
      "\030\001 \002(\t\022\017\n\007boot_ms\030\002 \001(\003\"\213\001\n\021BootstrapRes"
      "ponse\022\017\n\007success\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t"
      "\022%\n\005nodes\030\003 \003(\0132\026.elasticfaiss.WorkNode\022"
      ",\n\006shards\030\004 \003(\0132\034.elasticfaiss.IndexShar"
      "dConf\"a\n\024NodeHeartbeatRequest\022\021\n\tnode_pe"
      "er\030\001 \002(\t\022\021\n\tactive_ms\030\002 \001(\003\022#\n\006shards\030\003 "
      "\003(\0132\023.elasticfaiss.Shard\"a\n\025NodeHeartbea"
      "tResponse\022\017\n\007success\030\001 \002(\010\022\020\n\010redirect\030\002"
      " \001(\t\022%\n\005nodes\030\003 \003(\0132\026.elasticfaiss.WorkN"
      "ode\")\n\026GetClusterStateRequest\022\017\n\007cluster"
      "\030\001 \002(\t\"g\n\027GetClusterStateResponse\022\017\n\007suc"
      "cess\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t\022)\n\005state\030\003 "
      "\001(\0132\032.elasticfaiss.ClusterState\";\n\022Creat"
      "eIndexRequest\022%\n\004conf\030\001 \002(\0132\027.elasticfai"
      "ss.IndexConf\"G\n\023CreateIndexResponse\022\017\n\007s"
      "uccess\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t\022\r\n\005error\030"
      "\003 \001(\t\"(\n\022DeleteIndexRequest\022\022\n\nindex_nam"
      "e\030\001 \002(\t\"G\n\023DeleteIndexResponse\022\017\n\007succes"
      "s\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t\022\r\n\005error\030\003 \001(\t"
      "\";\n\022UpdateIndexRequest\022%\n\004conf\030\001 \002(\0132\027.e"
      "lasticfaiss.IndexConf\"G\n\023UpdateIndexResp"
      "onse\022\017\n\007success\030\001 \002(\010\022\020\n\010redirect\030\002 \001(\t\022"
      "\r\n\005error\030\003 \001(\t\"j\n\021UpdateNodeRequest\022\017\n\007p"
      "eer_id\030\001 \002(\t\022\r\n\005state\030\002 \001(\005\022\020\n\010state_ms\030"
      "\003 \002(\003\022#\n\006shards\030\004 \003(\0132\023.elasticfaiss.Sha"
      "rd\"F\n\022UpdateNodeResponse\022\017\n\007success\030\001 \002("
      "\010\022\020\n\010redirect\030\002 \001(\t\022\r\n\005error\030\003 \001(\t\"N\n\033Up"
      "dateClusterSettingRequest\022/\n\010settings\030\001 "
      "\002(\0132\035.elasticfaiss.ClusterSettings\"P\n\034Up"
      "dateClusterSettingResponse\022\017\n\007success\030\001 "
      "\002(\010\022\020\n\010redirect\030\002 \001(\t\022\r\n\005error\030\003 \001(\t*4\n\r"
      "WorkNodeState\022\020\n\014WNODE_ACTIVE\020\001\022\021\n\rWNODE"
      "_TIMEOUT\020\002*)\n\010NodeRole\022\r\n\tNODE_DATA\020\001\022\016\n"
      "\nNODE_PROXY\020\0022\203\005\n\rMasterService\022L\n\tboots"
      "trap\022\036.elasticfaiss.BootstrapRequest\032\037.e"
      "lasticfaiss.BootstrapResponse\022Y\n\016node_he"
      "artbeat\022\".elasticfaiss.NodeHeartbeatRequ"
      "est\032#.elasticfaiss.NodeHeartbeatResponse"
      "\022h\n\017cluster_setting\022).elasticfaiss.Updat"
      "eClusterSettingRequest\032*.elasticfaiss.Up"
      "dateClusterSettingResponse\022`\n\021get_cluste"
      "r_state\022$.elasticfaiss.GetClusterStateRe"
      "quest\032%.elasticfaiss.GetClusterStateResp"
      "onse\022S\n\014create_index\022 .elasticfaiss.Crea"
      "teIndexRequest\032!.elasticfaiss.CreateInde"
      "xResponse\022S\n\014delete_index\022 .elasticfaiss"
      ".DeleteIndexRequest\032!.elasticfaiss.Delet"
      "eIndexResponse\022S\n\014update_index\022 .elastic"
      "faiss.UpdateIndexRequest\032!.elasticfaiss."
      "UpdateIndexResponseB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2584);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "master.proto", &protobuf_RegisterTypes);
  ::protobuf_shard_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_master_2eproto
namespace elasticfaiss {
const ::google::protobuf::EnumDescriptor* WorkNodeState_descriptor() {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_master_2eproto::file_level_enum_descriptors[0];
}
bool WorkNodeState_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NodeRole_descriptor() {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_master_2eproto::file_level_enum_descriptors[1];
}
bool NodeRole_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ClusterSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterSettings::kShardAllocationAfterTimeoutSecsFieldNumber;
const int ClusterSettings::kTotalShardsPerNodeFieldNumber;
const int ClusterSettings::kIndexRpcTimeoutMsFieldNumber;
const int ClusterSettings::kIndexRpcMaxRetryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterSettings::ClusterSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_ClusterSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.ClusterSettings)
}
ClusterSettings::ClusterSettings(const ClusterSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shard_allocation_after_timeout_secs_, &from.shard_allocation_after_timeout_secs_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_rpc_max_retry_) -
    reinterpret_cast<char*>(&shard_allocation_after_timeout_secs_)) + sizeof(index_rpc_max_retry_));
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.ClusterSettings)
}

void ClusterSettings::SharedCtor() {
  shard_allocation_after_timeout_secs_ = 60;
  total_shards_per_node_ = -1;
  index_rpc_timeout_ms_ = 10000;
  index_rpc_max_retry_ = 2;
}

ClusterSettings::~ClusterSettings() {
  // @@protoc_insertion_point(destructor:elasticfaiss.ClusterSettings)
  SharedDtor();
}

void ClusterSettings::SharedDtor() {
}

void ClusterSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterSettings::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterSettings& ClusterSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_ClusterSettings.base);
  return *internal_default_instance();
}


void ClusterSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.ClusterSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    shard_allocation_after_timeout_secs_ = 60;
    total_shards_per_node_ = -1;
    index_rpc_timeout_ms_ = 10000;
    index_rpc_max_retry_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClusterSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.ClusterSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shard_allocation_after_timeout_secs = 1 [default = 60];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_shard_allocation_after_timeout_secs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shard_allocation_after_timeout_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_shards_per_node = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total_shards_per_node();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_shards_per_node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 index_rpc_timeout_ms = 3 [default = 10000];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_index_rpc_timeout_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_rpc_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 index_rpc_max_retry = 4 [default = 2];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_index_rpc_max_retry();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_rpc_max_retry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.ClusterSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.ClusterSettings)
  return false;
#undef DO_
}

void ClusterSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.ClusterSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 shard_allocation_after_timeout_secs = 1 [default = 60];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shard_allocation_after_timeout_secs(), output);
  }

  // optional int32 total_shards_per_node = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_shards_per_node(), output);
  }

  // optional int32 index_rpc_timeout_ms = 3 [default = 10000];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index_rpc_timeout_ms(), output);
  }

  // optional int32 index_rpc_max_retry = 4 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index_rpc_max_retry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.ClusterSettings)
}

::google::protobuf::uint8* ClusterSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.ClusterSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 shard_allocation_after_timeout_secs = 1 [default = 60];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shard_allocation_after_timeout_secs(), target);
  }

  // optional int32 total_shards_per_node = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_shards_per_node(), target);
  }

  // optional int32 index_rpc_timeout_ms = 3 [default = 10000];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index_rpc_timeout_ms(), target);
  }

  // optional int32 index_rpc_max_retry = 4 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index_rpc_max_retry(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.ClusterSettings)
  return target;
}

size_t ClusterSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.ClusterSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 shard_allocation_after_timeout_secs = 1 [default = 60];
    if (has_shard_allocation_after_timeout_secs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shard_allocation_after_timeout_secs());
    }

    // optional int32 total_shards_per_node = 2 [default = -1];
    if (has_total_shards_per_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_shards_per_node());
    }

    // optional int32 index_rpc_timeout_ms = 3 [default = 10000];
    if (has_index_rpc_timeout_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index_rpc_timeout_ms());
    }

    // optional int32 index_rpc_max_retry = 4 [default = 2];
    if (has_index_rpc_max_retry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index_rpc_max_retry());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.ClusterSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.ClusterSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.ClusterSettings)
    MergeFrom(*source);
  }
}

void ClusterSettings::MergeFrom(const ClusterSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.ClusterSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      shard_allocation_after_timeout_secs_ = from.shard_allocation_after_timeout_secs_;
    }
    if (cached_has_bits & 0x00000002u) {
      total_shards_per_node_ = from.total_shards_per_node_;
    }
    if (cached_has_bits & 0x00000004u) {
      index_rpc_timeout_ms_ = from.index_rpc_timeout_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      index_rpc_max_retry_ = from.index_rpc_max_retry_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClusterSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.ClusterSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterSettings::CopyFrom(const ClusterSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.ClusterSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterSettings::IsInitialized() const {
  return true;
}

void ClusterSettings::Swap(ClusterSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterSettings::InternalSwap(ClusterSettings* other) {
  using std::swap;
  swap(shard_allocation_after_timeout_secs_, other->shard_allocation_after_timeout_secs_);
  swap(total_shards_per_node_, other->total_shards_per_node_);
  swap(index_rpc_timeout_ms_, other->index_rpc_timeout_ms_);
  swap(index_rpc_max_retry_, other->index_rpc_max_retry_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterSettings::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkNode::InitAsDefaultInstance() {
}
void WorkNode::clear_shards() {
  shards_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkNode::kPeerIdFieldNumber;
const int WorkNode::kLastActiveMsFieldNumber;
const int WorkNode::kLastStateMsFieldNumber;
const int WorkNode::kShardsFieldNumber;
const int WorkNode::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkNode::WorkNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_WorkNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.WorkNode)
}
WorkNode::WorkNode(const WorkNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shards_(from.shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  ::memcpy(&last_active_ms_, &from.last_active_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&last_active_ms_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.WorkNode)
}

void WorkNode::SharedCtor() {
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_active_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&last_active_ms_)) + sizeof(state_));
}

WorkNode::~WorkNode() {
  // @@protoc_insertion_point(destructor:elasticfaiss.WorkNode)
  SharedDtor();
}

void WorkNode::SharedDtor() {
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkNode::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkNode& WorkNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_WorkNode.base);
  return *internal_default_instance();
}


void WorkNode::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.WorkNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shards_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    peer_id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&last_active_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&last_active_ms_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorkNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.WorkNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string peer_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.WorkNode.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_active_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_last_active_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_active_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_state_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_last_state_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_state_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.Shard shards = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.WorkNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.WorkNode)
  return false;
#undef DO_
}

void WorkNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.WorkNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.WorkNode.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->peer_id(), output);
  }

  // optional int64 last_active_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->last_active_ms(), output);
  }

  // optional int64 last_state_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->last_state_ms(), output);
  }

  // repeated .elasticfaiss.Shard shards = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->shards(static_cast<int>(i)),
      output);
  }

  // optional int32 state = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.WorkNode)
}

::google::protobuf::uint8* WorkNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.WorkNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.WorkNode.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->peer_id(), target);
  }

  // optional int64 last_active_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->last_active_ms(), target);
  }

  // optional int64 last_state_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->last_state_ms(), target);
  }

  // repeated .elasticfaiss.Shard shards = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->shards(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 state = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.WorkNode)
  return target;
}

size_t WorkNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.WorkNode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string peer_id = 1;
  if (has_peer_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }
  // repeated .elasticfaiss.Shard shards = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->shards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shards(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 14u) {
    // optional int64 last_active_ms = 2;
    if (has_last_active_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_active_ms());
    }

    // optional int64 last_state_ms = 3;
    if (has_last_state_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_state_ms());
    }

    // optional int32 state = 5;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.WorkNode)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.WorkNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.WorkNode)
    MergeFrom(*source);
  }
}

void WorkNode::MergeFrom(const WorkNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.WorkNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shards_.MergeFrom(from.shards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      last_active_ms_ = from.last_active_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_state_ms_ = from.last_state_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorkNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.WorkNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkNode::CopyFrom(const WorkNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.WorkNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkNode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shards())) return false;
  return true;
}

void WorkNode::Swap(WorkNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkNode::InternalSwap(WorkNode* other) {
  using std::swap;
  CastToBase(&shards_)->InternalSwap(CastToBase(&other->shards_));
  peer_id_.Swap(&other->peer_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_active_ms_, other->last_active_ms_);
  swap(last_state_ms_, other->last_state_ms_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkNode::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterState::kUpdateMsFieldNumber;
const int ClusterState::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterState::ClusterState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_ClusterState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.ClusterState)
}
ClusterState::ClusterState(const ClusterState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  update_ms_ = from.update_ms_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.ClusterState)
}

void ClusterState::SharedCtor() {
  update_ms_ = GOOGLE_LONGLONG(0);
}

ClusterState::~ClusterState() {
  // @@protoc_insertion_point(destructor:elasticfaiss.ClusterState)
  SharedDtor();
}

void ClusterState::SharedDtor() {
}

void ClusterState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterState::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterState& ClusterState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_ClusterState.base);
  return *internal_default_instance();
}


void ClusterState::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.ClusterState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  update_ms_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClusterState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.ClusterState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 update_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_update_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.WorkNode nodes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.ClusterState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.ClusterState)
  return false;
#undef DO_
}

void ClusterState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.ClusterState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 update_ms = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->update_ms(), output);
  }

  // repeated .elasticfaiss.WorkNode nodes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.ClusterState)
}

::google::protobuf::uint8* ClusterState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.ClusterState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 update_ms = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->update_ms(), target);
  }

  // repeated .elasticfaiss.WorkNode nodes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.ClusterState)
  return target;
}

size_t ClusterState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.ClusterState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .elasticfaiss.WorkNode nodes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // optional int64 update_ms = 1;
  if (has_update_ms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.ClusterState)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.ClusterState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.ClusterState)
    MergeFrom(*source);
  }
}

void ClusterState::MergeFrom(const ClusterState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.ClusterState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from.has_update_ms()) {
    set_update_ms(from.update_ms());
  }
}

void ClusterState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.ClusterState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterState::CopyFrom(const ClusterState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.ClusterState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterState::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->nodes())) return false;
  return true;
}

void ClusterState::Swap(ClusterState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterState::InternalSwap(ClusterState* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  swap(update_ms_, other->update_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterState::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MasterSnapshot::InitAsDefaultInstance() {
  ::elasticfaiss::_MasterSnapshot_default_instance_._instance.get_mutable()->state_ = const_cast< ::elasticfaiss::ClusterState*>(
      ::elasticfaiss::ClusterState::internal_default_instance());
  ::elasticfaiss::_MasterSnapshot_default_instance_._instance.get_mutable()->settings_ = const_cast< ::elasticfaiss::ClusterSettings*>(
      ::elasticfaiss::ClusterSettings::internal_default_instance());
}
void MasterSnapshot::clear_index() {
  index_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterSnapshot::kStateFieldNumber;
const int MasterSnapshot::kIndexFieldNumber;
const int MasterSnapshot::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterSnapshot::MasterSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_MasterSnapshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.MasterSnapshot)
}
MasterSnapshot::MasterSnapshot(const MasterSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      index_(from.index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::elasticfaiss::ClusterState(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_settings()) {
    settings_ = new ::elasticfaiss::ClusterSettings(*from.settings_);
  } else {
    settings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.MasterSnapshot)
}

void MasterSnapshot::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&settings_) -
      reinterpret_cast<char*>(&state_)) + sizeof(settings_));
}

MasterSnapshot::~MasterSnapshot() {
  // @@protoc_insertion_point(destructor:elasticfaiss.MasterSnapshot)
  SharedDtor();
}

void MasterSnapshot::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete settings_;
}

void MasterSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MasterSnapshot::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterSnapshot& MasterSnapshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_MasterSnapshot.base);
  return *internal_default_instance();
}


void MasterSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.MasterSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(state_ != NULL);
      state_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(settings_ != NULL);
      settings_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MasterSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.MasterSnapshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .elasticfaiss.ClusterState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.IndexConf index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .elasticfaiss.ClusterSettings settings = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.MasterSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.MasterSnapshot)
  return false;
#undef DO_
}

void MasterSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.MasterSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .elasticfaiss.ClusterState state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_state(), output);
  }

  // repeated .elasticfaiss.IndexConf index = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->index_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->index(static_cast<int>(i)),
      output);
  }

  // optional .elasticfaiss.ClusterSettings settings = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_settings(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.MasterSnapshot)
}

::google::protobuf::uint8* MasterSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.MasterSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .elasticfaiss.ClusterState state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_state(), deterministic, target);
  }

  // repeated .elasticfaiss.IndexConf index = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->index_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->index(static_cast<int>(i)), deterministic, target);
  }

  // optional .elasticfaiss.ClusterSettings settings = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_settings(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.MasterSnapshot)
  return target;
}

size_t MasterSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.MasterSnapshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .elasticfaiss.IndexConf index = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->index_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->index(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .elasticfaiss.ClusterState state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *state_);
    }

    // optional .elasticfaiss.ClusterSettings settings = 3;
    if (has_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *settings_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.MasterSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.MasterSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.MasterSnapshot)
    MergeFrom(*source);
  }
}

void MasterSnapshot::MergeFrom(const MasterSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.MasterSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_.MergeFrom(from.index_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_state()->::elasticfaiss::ClusterState::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_settings()->::elasticfaiss::ClusterSettings::MergeFrom(from.settings());
    }
  }
}

void MasterSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.MasterSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterSnapshot::CopyFrom(const MasterSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.MasterSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterSnapshot::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->index())) return false;
  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  return true;
}

void MasterSnapshot::Swap(MasterSnapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterSnapshot::InternalSwap(MasterSnapshot* other) {
  using std::swap;
  CastToBase(&index_)->InternalSwap(CastToBase(&other->index_));
  swap(state_, other->state_);
  swap(settings_, other->settings_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MasterSnapshot::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BootstrapRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BootstrapRequest::kNodePeerFieldNumber;
const int BootstrapRequest::kBootMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BootstrapRequest::BootstrapRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_BootstrapRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.BootstrapRequest)
}
BootstrapRequest::BootstrapRequest(const BootstrapRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_peer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_node_peer()) {
    node_peer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_peer_);
  }
  boot_ms_ = from.boot_ms_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.BootstrapRequest)
}

void BootstrapRequest::SharedCtor() {
  node_peer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boot_ms_ = GOOGLE_LONGLONG(0);
}

BootstrapRequest::~BootstrapRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.BootstrapRequest)
  SharedDtor();
}

void BootstrapRequest::SharedDtor() {
  node_peer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BootstrapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BootstrapRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BootstrapRequest& BootstrapRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_BootstrapRequest.base);
  return *internal_default_instance();
}


void BootstrapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.BootstrapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    node_peer_.ClearNonDefaultToEmptyNoArena();
  }
  boot_ms_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BootstrapRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.BootstrapRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string node_peer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_peer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node_peer().data(), static_cast<int>(this->node_peer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.BootstrapRequest.node_peer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 boot_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_boot_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boot_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.BootstrapRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.BootstrapRequest)
  return false;
#undef DO_
}

void BootstrapRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.BootstrapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string node_peer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_peer().data(), static_cast<int>(this->node_peer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.BootstrapRequest.node_peer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->node_peer(), output);
  }

  // optional int64 boot_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->boot_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.BootstrapRequest)
}

::google::protobuf::uint8* BootstrapRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.BootstrapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string node_peer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_peer().data(), static_cast<int>(this->node_peer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.BootstrapRequest.node_peer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->node_peer(), target);
  }

  // optional int64 boot_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->boot_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.BootstrapRequest)
  return target;
}

size_t BootstrapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.BootstrapRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string node_peer = 1;
  if (has_node_peer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_peer());
  }
  // optional int64 boot_ms = 2;
  if (has_boot_ms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->boot_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BootstrapRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.BootstrapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BootstrapRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BootstrapRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.BootstrapRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.BootstrapRequest)
    MergeFrom(*source);
  }
}

void BootstrapRequest::MergeFrom(const BootstrapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.BootstrapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_node_peer();
      node_peer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_peer_);
    }
    if (cached_has_bits & 0x00000002u) {
      boot_ms_ = from.boot_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BootstrapRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.BootstrapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BootstrapRequest::CopyFrom(const BootstrapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.BootstrapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BootstrapRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void BootstrapRequest::Swap(BootstrapRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BootstrapRequest::InternalSwap(BootstrapRequest* other) {
  using std::swap;
  node_peer_.Swap(&other->node_peer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(boot_ms_, other->boot_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BootstrapRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BootstrapResponse::InitAsDefaultInstance() {
}
void BootstrapResponse::clear_shards() {
  shards_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BootstrapResponse::kSuccessFieldNumber;
const int BootstrapResponse::kRedirectFieldNumber;
const int BootstrapResponse::kNodesFieldNumber;
const int BootstrapResponse::kShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BootstrapResponse::BootstrapResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_BootstrapResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.BootstrapResponse)
}
BootstrapResponse::BootstrapResponse(const BootstrapResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      nodes_(from.nodes_),
      shards_(from.shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.BootstrapResponse)
}

void BootstrapResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

BootstrapResponse::~BootstrapResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.BootstrapResponse)
  SharedDtor();
}

void BootstrapResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BootstrapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BootstrapResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BootstrapResponse& BootstrapResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_BootstrapResponse.base);
  return *internal_default_instance();
}


void BootstrapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.BootstrapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  shards_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    redirect_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BootstrapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.BootstrapResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.BootstrapResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.WorkNode nodes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.IndexShardConf shards = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.BootstrapResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.BootstrapResponse)
  return false;
#undef DO_
}

void BootstrapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.BootstrapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.BootstrapResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // repeated .elasticfaiss.WorkNode nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->nodes(static_cast<int>(i)),
      output);
  }

  // repeated .elasticfaiss.IndexShardConf shards = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->shards(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.BootstrapResponse)
}

::google::protobuf::uint8* BootstrapResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.BootstrapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.BootstrapResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // repeated .elasticfaiss.WorkNode nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .elasticfaiss.IndexShardConf shards = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->shards(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.BootstrapResponse)
  return target;
}

size_t BootstrapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.BootstrapResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // repeated .elasticfaiss.WorkNode nodes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .elasticfaiss.IndexShardConf shards = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->shards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shards(static_cast<int>(i)));
    }
  }

  // optional string redirect = 2;
  if (has_redirect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BootstrapResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.BootstrapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BootstrapResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BootstrapResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.BootstrapResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.BootstrapResponse)
    MergeFrom(*source);
  }
}

void BootstrapResponse::MergeFrom(const BootstrapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.BootstrapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  shards_.MergeFrom(from.shards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BootstrapResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.BootstrapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BootstrapResponse::CopyFrom(const BootstrapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.BootstrapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BootstrapResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->nodes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shards())) return false;
  return true;
}

void BootstrapResponse::Swap(BootstrapResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BootstrapResponse::InternalSwap(BootstrapResponse* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  CastToBase(&shards_)->InternalSwap(CastToBase(&other->shards_));
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BootstrapResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeHeartbeatRequest::InitAsDefaultInstance() {
}
void NodeHeartbeatRequest::clear_shards() {
  shards_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeHeartbeatRequest::kNodePeerFieldNumber;
const int NodeHeartbeatRequest::kActiveMsFieldNumber;
const int NodeHeartbeatRequest::kShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeHeartbeatRequest::NodeHeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_NodeHeartbeatRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.NodeHeartbeatRequest)
}
NodeHeartbeatRequest::NodeHeartbeatRequest(const NodeHeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shards_(from.shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_peer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_node_peer()) {
    node_peer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_peer_);
  }
  active_ms_ = from.active_ms_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.NodeHeartbeatRequest)
}

void NodeHeartbeatRequest::SharedCtor() {
  node_peer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_ms_ = GOOGLE_LONGLONG(0);
}

NodeHeartbeatRequest::~NodeHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.NodeHeartbeatRequest)
  SharedDtor();
}

void NodeHeartbeatRequest::SharedDtor() {
  node_peer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeHeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NodeHeartbeatRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeHeartbeatRequest& NodeHeartbeatRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_NodeHeartbeatRequest.base);
  return *internal_default_instance();
}


void NodeHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.NodeHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shards_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    node_peer_.ClearNonDefaultToEmptyNoArena();
  }
  active_ms_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NodeHeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.NodeHeartbeatRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string node_peer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_peer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node_peer().data(), static_cast<int>(this->node_peer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.NodeHeartbeatRequest.node_peer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 active_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_active_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &active_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.Shard shards = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.NodeHeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.NodeHeartbeatRequest)
  return false;
#undef DO_
}

void NodeHeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.NodeHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string node_peer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_peer().data(), static_cast<int>(this->node_peer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.NodeHeartbeatRequest.node_peer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->node_peer(), output);
  }

  // optional int64 active_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->active_ms(), output);
  }

  // repeated .elasticfaiss.Shard shards = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->shards(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.NodeHeartbeatRequest)
}

::google::protobuf::uint8* NodeHeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.NodeHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string node_peer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_peer().data(), static_cast<int>(this->node_peer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.NodeHeartbeatRequest.node_peer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->node_peer(), target);
  }

  // optional int64 active_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->active_ms(), target);
  }

  // repeated .elasticfaiss.Shard shards = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->shards(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.NodeHeartbeatRequest)
  return target;
}

size_t NodeHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.NodeHeartbeatRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string node_peer = 1;
  if (has_node_peer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_peer());
  }
  // repeated .elasticfaiss.Shard shards = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->shards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shards(static_cast<int>(i)));
    }
  }

  // optional int64 active_ms = 2;
  if (has_active_ms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->active_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeHeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.NodeHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeHeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeHeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.NodeHeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.NodeHeartbeatRequest)
    MergeFrom(*source);
  }
}

void NodeHeartbeatRequest::MergeFrom(const NodeHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.NodeHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shards_.MergeFrom(from.shards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_node_peer();
      node_peer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_peer_);
    }
    if (cached_has_bits & 0x00000002u) {
      active_ms_ = from.active_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NodeHeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.NodeHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeHeartbeatRequest::CopyFrom(const NodeHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.NodeHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeHeartbeatRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shards())) return false;
  return true;
}

void NodeHeartbeatRequest::Swap(NodeHeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeHeartbeatRequest::InternalSwap(NodeHeartbeatRequest* other) {
  using std::swap;
  CastToBase(&shards_)->InternalSwap(CastToBase(&other->shards_));
  node_peer_.Swap(&other->node_peer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(active_ms_, other->active_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NodeHeartbeatRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeHeartbeatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeHeartbeatResponse::kSuccessFieldNumber;
const int NodeHeartbeatResponse::kRedirectFieldNumber;
const int NodeHeartbeatResponse::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeHeartbeatResponse::NodeHeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_NodeHeartbeatResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.NodeHeartbeatResponse)
}
NodeHeartbeatResponse::NodeHeartbeatResponse(const NodeHeartbeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.NodeHeartbeatResponse)
}

void NodeHeartbeatResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

NodeHeartbeatResponse::~NodeHeartbeatResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.NodeHeartbeatResponse)
  SharedDtor();
}

void NodeHeartbeatResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeHeartbeatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NodeHeartbeatResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeHeartbeatResponse& NodeHeartbeatResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_NodeHeartbeatResponse.base);
  return *internal_default_instance();
}


void NodeHeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.NodeHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    redirect_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NodeHeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.NodeHeartbeatResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.NodeHeartbeatResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.WorkNode nodes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.NodeHeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.NodeHeartbeatResponse)
  return false;
#undef DO_
}

void NodeHeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.NodeHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.NodeHeartbeatResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // repeated .elasticfaiss.WorkNode nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.NodeHeartbeatResponse)
}

::google::protobuf::uint8* NodeHeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.NodeHeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.NodeHeartbeatResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // repeated .elasticfaiss.WorkNode nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.NodeHeartbeatResponse)
  return target;
}

size_t NodeHeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.NodeHeartbeatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // repeated .elasticfaiss.WorkNode nodes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // optional string redirect = 2;
  if (has_redirect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeHeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.NodeHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeHeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeHeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.NodeHeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.NodeHeartbeatResponse)
    MergeFrom(*source);
  }
}

void NodeHeartbeatResponse::MergeFrom(const NodeHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.NodeHeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NodeHeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.NodeHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeHeartbeatResponse::CopyFrom(const NodeHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.NodeHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeHeartbeatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->nodes())) return false;
  return true;
}

void NodeHeartbeatResponse::Swap(NodeHeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeHeartbeatResponse::InternalSwap(NodeHeartbeatResponse* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NodeHeartbeatResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetClusterStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterStateRequest::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterStateRequest::GetClusterStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_GetClusterStateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.GetClusterStateRequest)
}
GetClusterStateRequest::GetClusterStateRequest(const GetClusterStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cluster()) {
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.GetClusterStateRequest)
}

void GetClusterStateRequest::SharedCtor() {
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetClusterStateRequest::~GetClusterStateRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.GetClusterStateRequest)
  SharedDtor();
}

void GetClusterStateRequest::SharedDtor() {
  cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetClusterStateRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterStateRequest& GetClusterStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_GetClusterStateRequest.base);
  return *internal_default_instance();
}


void GetClusterStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.GetClusterStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    cluster_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetClusterStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.GetClusterStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.GetClusterStateRequest.cluster");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.GetClusterStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.GetClusterStateRequest)
  return false;
#undef DO_
}

void GetClusterStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.GetClusterStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string cluster = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.GetClusterStateRequest.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.GetClusterStateRequest)
}

::google::protobuf::uint8* GetClusterStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.GetClusterStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string cluster = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.GetClusterStateRequest.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.GetClusterStateRequest)
  return target;
}

size_t GetClusterStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.GetClusterStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string cluster = 1;
  if (has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetClusterStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.GetClusterStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.GetClusterStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.GetClusterStateRequest)
    MergeFrom(*source);
  }
}

void GetClusterStateRequest::MergeFrom(const GetClusterStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.GetClusterStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cluster()) {
    set_has_cluster();
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
}

void GetClusterStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.GetClusterStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterStateRequest::CopyFrom(const GetClusterStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.GetClusterStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterStateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetClusterStateRequest::Swap(GetClusterStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterStateRequest::InternalSwap(GetClusterStateRequest* other) {
  using std::swap;
  cluster_.Swap(&other->cluster_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetClusterStateRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetClusterStateResponse::InitAsDefaultInstance() {
  ::elasticfaiss::_GetClusterStateResponse_default_instance_._instance.get_mutable()->state_ = const_cast< ::elasticfaiss::ClusterState*>(
      ::elasticfaiss::ClusterState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterStateResponse::kSuccessFieldNumber;
const int GetClusterStateResponse::kRedirectFieldNumber;
const int GetClusterStateResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterStateResponse::GetClusterStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_GetClusterStateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.GetClusterStateResponse)
}
GetClusterStateResponse::GetClusterStateResponse(const GetClusterStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_state()) {
    state_ = new ::elasticfaiss::ClusterState(*from.state_);
  } else {
    state_ = NULL;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.GetClusterStateResponse)
}

void GetClusterStateResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&state_)) + sizeof(success_));
}

GetClusterStateResponse::~GetClusterStateResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.GetClusterStateResponse)
  SharedDtor();
}

void GetClusterStateResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_;
}

void GetClusterStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetClusterStateResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterStateResponse& GetClusterStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_GetClusterStateResponse.base);
  return *internal_default_instance();
}


void GetClusterStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.GetClusterStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(state_ != NULL);
      state_->Clear();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetClusterStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.GetClusterStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.GetClusterStateResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .elasticfaiss.ClusterState state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.GetClusterStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.GetClusterStateResponse)
  return false;
#undef DO_
}

void GetClusterStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.GetClusterStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.GetClusterStateResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional .elasticfaiss.ClusterState state = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.GetClusterStateResponse)
}

::google::protobuf::uint8* GetClusterStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.GetClusterStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.GetClusterStateResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional .elasticfaiss.ClusterState state = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_state(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.GetClusterStateResponse)
  return target;
}

size_t GetClusterStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.GetClusterStateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional .elasticfaiss.ClusterState state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *state_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetClusterStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.GetClusterStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.GetClusterStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.GetClusterStateResponse)
    MergeFrom(*source);
  }
}

void GetClusterStateResponse::MergeFrom(const GetClusterStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.GetClusterStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_state()->::elasticfaiss::ClusterState::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetClusterStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.GetClusterStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterStateResponse::CopyFrom(const GetClusterStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.GetClusterStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterStateResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  return true;
}

void GetClusterStateResponse::Swap(GetClusterStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterStateResponse::InternalSwap(GetClusterStateResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetClusterStateResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateIndexRequest::InitAsDefaultInstance() {
  ::elasticfaiss::_CreateIndexRequest_default_instance_._instance.get_mutable()->conf_ = const_cast< ::elasticfaiss::IndexConf*>(
      ::elasticfaiss::IndexConf::internal_default_instance());
}
void CreateIndexRequest::clear_conf() {
  if (conf_ != NULL) conf_->Clear();
  clear_has_conf();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIndexRequest::kConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexRequest::CreateIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_CreateIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.CreateIndexRequest)
}
CreateIndexRequest::CreateIndexRequest(const CreateIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conf()) {
    conf_ = new ::elasticfaiss::IndexConf(*from.conf_);
  } else {
    conf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.CreateIndexRequest)
}

void CreateIndexRequest::SharedCtor() {
  conf_ = NULL;
}

CreateIndexRequest::~CreateIndexRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.CreateIndexRequest)
  SharedDtor();
}

void CreateIndexRequest::SharedDtor() {
  if (this != internal_default_instance()) delete conf_;
}

void CreateIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateIndexRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIndexRequest& CreateIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_CreateIndexRequest.base);
  return *internal_default_instance();
}


void CreateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(conf_ != NULL);
    conf_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.CreateIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .elasticfaiss.IndexConf conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.CreateIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.CreateIndexRequest)
  return false;
#undef DO_
}

void CreateIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.IndexConf conf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_conf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.CreateIndexRequest)
}

::google::protobuf::uint8* CreateIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.IndexConf conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_conf(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.CreateIndexRequest)
  return target;
}

size_t CreateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.CreateIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .elasticfaiss.IndexConf conf = 1;
  if (has_conf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conf_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.CreateIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.CreateIndexRequest)
    MergeFrom(*source);
  }
}

void CreateIndexRequest::MergeFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conf()) {
    mutable_conf()->::elasticfaiss::IndexConf::MergeFrom(from.conf());
  }
}

void CreateIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexRequest::CopyFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_conf()) {
    if (!this->conf_->IsInitialized()) return false;
  }
  return true;
}

void CreateIndexRequest::Swap(CreateIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexRequest::InternalSwap(CreateIndexRequest* other) {
  using std::swap;
  swap(conf_, other->conf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateIndexRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateIndexResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIndexResponse::kSuccessFieldNumber;
const int CreateIndexResponse::kRedirectFieldNumber;
const int CreateIndexResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexResponse::CreateIndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_CreateIndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.CreateIndexResponse)
}
CreateIndexResponse::CreateIndexResponse(const CreateIndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.CreateIndexResponse)
}

void CreateIndexResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

CreateIndexResponse::~CreateIndexResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.CreateIndexResponse)
  SharedDtor();
}

void CreateIndexResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateIndexResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIndexResponse& CreateIndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_CreateIndexResponse.base);
  return *internal_default_instance();
}


void CreateIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.CreateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      error_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateIndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.CreateIndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.CreateIndexResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.CreateIndexResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.CreateIndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.CreateIndexResponse)
  return false;
#undef DO_
}

void CreateIndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.CreateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.CreateIndexResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.CreateIndexResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.CreateIndexResponse)
}

::google::protobuf::uint8* CreateIndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.CreateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.CreateIndexResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.CreateIndexResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.CreateIndexResponse)
  return target;
}

size_t CreateIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.CreateIndexResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional string error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.CreateIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.CreateIndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.CreateIndexResponse)
    MergeFrom(*source);
  }
}

void CreateIndexResponse::MergeFrom(const CreateIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.CreateIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateIndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.CreateIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexResponse::CopyFrom(const CreateIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.CreateIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void CreateIndexResponse::Swap(CreateIndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexResponse::InternalSwap(CreateIndexResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateIndexResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexRequest::kIndexNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexRequest::DeleteIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_DeleteIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.DeleteIndexRequest)
}
DeleteIndexRequest::DeleteIndexRequest(const DeleteIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_index_name()) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.DeleteIndexRequest)
}

void DeleteIndexRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteIndexRequest::~DeleteIndexRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.DeleteIndexRequest)
  SharedDtor();
}

void DeleteIndexRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteIndexRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexRequest& DeleteIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_DeleteIndexRequest.base);
  return *internal_default_instance();
}


void DeleteIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    index_name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.DeleteIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.DeleteIndexRequest.index_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.DeleteIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.DeleteIndexRequest)
  return false;
#undef DO_
}

void DeleteIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string index_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteIndexRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.DeleteIndexRequest)
}

::google::protobuf::uint8* DeleteIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string index_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteIndexRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.DeleteIndexRequest)
  return target;
}

size_t DeleteIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.DeleteIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string index_name = 1;
  if (has_index_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.DeleteIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.DeleteIndexRequest)
    MergeFrom(*source);
  }
}

void DeleteIndexRequest::MergeFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index_name()) {
    set_has_index_name();
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
}

void DeleteIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexRequest::CopyFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DeleteIndexRequest::Swap(DeleteIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexRequest::InternalSwap(DeleteIndexRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteIndexRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexResponse::kSuccessFieldNumber;
const int DeleteIndexResponse::kRedirectFieldNumber;
const int DeleteIndexResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexResponse::DeleteIndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_DeleteIndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.DeleteIndexResponse)
}
DeleteIndexResponse::DeleteIndexResponse(const DeleteIndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.DeleteIndexResponse)
}

void DeleteIndexResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

DeleteIndexResponse::~DeleteIndexResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.DeleteIndexResponse)
  SharedDtor();
}

void DeleteIndexResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteIndexResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexResponse& DeleteIndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_DeleteIndexResponse.base);
  return *internal_default_instance();
}


void DeleteIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.DeleteIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      error_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteIndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.DeleteIndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.DeleteIndexResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.DeleteIndexResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.DeleteIndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.DeleteIndexResponse)
  return false;
#undef DO_
}

void DeleteIndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.DeleteIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteIndexResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteIndexResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.DeleteIndexResponse)
}

::google::protobuf::uint8* DeleteIndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.DeleteIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteIndexResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.DeleteIndexResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.DeleteIndexResponse)
  return target;
}

size_t DeleteIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.DeleteIndexResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional string error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.DeleteIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.DeleteIndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.DeleteIndexResponse)
    MergeFrom(*source);
  }
}

void DeleteIndexResponse::MergeFrom(const DeleteIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.DeleteIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeleteIndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.DeleteIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexResponse::CopyFrom(const DeleteIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.DeleteIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void DeleteIndexResponse::Swap(DeleteIndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexResponse::InternalSwap(DeleteIndexResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteIndexResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateIndexRequest::InitAsDefaultInstance() {
  ::elasticfaiss::_UpdateIndexRequest_default_instance_._instance.get_mutable()->conf_ = const_cast< ::elasticfaiss::IndexConf*>(
      ::elasticfaiss::IndexConf::internal_default_instance());
}
void UpdateIndexRequest::clear_conf() {
  if (conf_ != NULL) conf_->Clear();
  clear_has_conf();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateIndexRequest::kConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateIndexRequest::UpdateIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_UpdateIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.UpdateIndexRequest)
}
UpdateIndexRequest::UpdateIndexRequest(const UpdateIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conf()) {
    conf_ = new ::elasticfaiss::IndexConf(*from.conf_);
  } else {
    conf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.UpdateIndexRequest)
}

void UpdateIndexRequest::SharedCtor() {
  conf_ = NULL;
}

UpdateIndexRequest::~UpdateIndexRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.UpdateIndexRequest)
  SharedDtor();
}

void UpdateIndexRequest::SharedDtor() {
  if (this != internal_default_instance()) delete conf_;
}

void UpdateIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateIndexRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateIndexRequest& UpdateIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_UpdateIndexRequest.base);
  return *internal_default_instance();
}


void UpdateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.UpdateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(conf_ != NULL);
    conf_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.UpdateIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .elasticfaiss.IndexConf conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.UpdateIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.UpdateIndexRequest)
  return false;
#undef DO_
}

void UpdateIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.UpdateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.IndexConf conf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_conf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.UpdateIndexRequest)
}

::google::protobuf::uint8* UpdateIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.UpdateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.IndexConf conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_conf(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.UpdateIndexRequest)
  return target;
}

size_t UpdateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.UpdateIndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .elasticfaiss.IndexConf conf = 1;
  if (has_conf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conf_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.UpdateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.UpdateIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.UpdateIndexRequest)
    MergeFrom(*source);
  }
}

void UpdateIndexRequest::MergeFrom(const UpdateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.UpdateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conf()) {
    mutable_conf()->::elasticfaiss::IndexConf::MergeFrom(from.conf());
  }
}

void UpdateIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.UpdateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIndexRequest::CopyFrom(const UpdateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.UpdateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIndexRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_conf()) {
    if (!this->conf_->IsInitialized()) return false;
  }
  return true;
}

void UpdateIndexRequest::Swap(UpdateIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateIndexRequest::InternalSwap(UpdateIndexRequest* other) {
  using std::swap;
  swap(conf_, other->conf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateIndexRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateIndexResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateIndexResponse::kSuccessFieldNumber;
const int UpdateIndexResponse::kRedirectFieldNumber;
const int UpdateIndexResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateIndexResponse::UpdateIndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_UpdateIndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.UpdateIndexResponse)
}
UpdateIndexResponse::UpdateIndexResponse(const UpdateIndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.UpdateIndexResponse)
}

void UpdateIndexResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

UpdateIndexResponse::~UpdateIndexResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.UpdateIndexResponse)
  SharedDtor();
}

void UpdateIndexResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateIndexResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateIndexResponse& UpdateIndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_UpdateIndexResponse.base);
  return *internal_default_instance();
}


void UpdateIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.UpdateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      error_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateIndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.UpdateIndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.UpdateIndexResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.UpdateIndexResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.UpdateIndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.UpdateIndexResponse)
  return false;
#undef DO_
}

void UpdateIndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.UpdateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateIndexResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateIndexResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.UpdateIndexResponse)
}

::google::protobuf::uint8* UpdateIndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.UpdateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateIndexResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateIndexResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.UpdateIndexResponse)
  return target;
}

size_t UpdateIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.UpdateIndexResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional string error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateIndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.UpdateIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateIndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.UpdateIndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.UpdateIndexResponse)
    MergeFrom(*source);
  }
}

void UpdateIndexResponse::MergeFrom(const UpdateIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.UpdateIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateIndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.UpdateIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIndexResponse::CopyFrom(const UpdateIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.UpdateIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIndexResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void UpdateIndexResponse::Swap(UpdateIndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateIndexResponse::InternalSwap(UpdateIndexResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateIndexResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateNodeRequest::InitAsDefaultInstance() {
}
void UpdateNodeRequest::clear_shards() {
  shards_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNodeRequest::kPeerIdFieldNumber;
const int UpdateNodeRequest::kStateFieldNumber;
const int UpdateNodeRequest::kStateMsFieldNumber;
const int UpdateNodeRequest::kShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNodeRequest::UpdateNodeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_UpdateNodeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.UpdateNodeRequest)
}
UpdateNodeRequest::UpdateNodeRequest(const UpdateNodeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shards_(from.shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  ::memcpy(&state_ms_, &from.state_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&state_ms_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.UpdateNodeRequest)
}

void UpdateNodeRequest::SharedCtor() {
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&state_ms_)) + sizeof(state_));
}

UpdateNodeRequest::~UpdateNodeRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.UpdateNodeRequest)
  SharedDtor();
}

void UpdateNodeRequest::SharedDtor() {
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateNodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateNodeRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateNodeRequest& UpdateNodeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_UpdateNodeRequest.base);
  return *internal_default_instance();
}


void UpdateNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.UpdateNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shards_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    peer_id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&state_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&state_ms_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.UpdateNodeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string peer_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.UpdateNodeRequest.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 state_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_state_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &state_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .elasticfaiss.Shard shards = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.UpdateNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.UpdateNodeRequest)
  return false;
#undef DO_
}

void UpdateNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.UpdateNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateNodeRequest.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->peer_id(), output);
  }

  // optional int32 state = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  // required int64 state_ms = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->state_ms(), output);
  }

  // repeated .elasticfaiss.Shard shards = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->shards(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.UpdateNodeRequest)
}

::google::protobuf::uint8* UpdateNodeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.UpdateNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateNodeRequest.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->peer_id(), target);
  }

  // optional int32 state = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  // required int64 state_ms = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->state_ms(), target);
  }

  // repeated .elasticfaiss.Shard shards = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->shards(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.UpdateNodeRequest)
  return target;
}

size_t UpdateNodeRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:elasticfaiss.UpdateNodeRequest)
  size_t total_size = 0;

  if (has_peer_id()) {
    // required string peer_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }

  if (has_state_ms()) {
    // required int64 state_ms = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->state_ms());
  }

  return total_size;
}
size_t UpdateNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.UpdateNodeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string peer_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());

    // required int64 state_ms = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->state_ms());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .elasticfaiss.Shard shards = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->shards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shards(static_cast<int>(i)));
    }
  }

  // optional int32 state = 2;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.UpdateNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNodeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateNodeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.UpdateNodeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.UpdateNodeRequest)
    MergeFrom(*source);
  }
}

void UpdateNodeRequest::MergeFrom(const UpdateNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.UpdateNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shards_.MergeFrom(from.shards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      state_ms_ = from.state_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.UpdateNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNodeRequest::CopyFrom(const UpdateNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.UpdateNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shards())) return false;
  return true;
}

void UpdateNodeRequest::Swap(UpdateNodeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNodeRequest::InternalSwap(UpdateNodeRequest* other) {
  using std::swap;
  CastToBase(&shards_)->InternalSwap(CastToBase(&other->shards_));
  peer_id_.Swap(&other->peer_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_ms_, other->state_ms_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateNodeRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateNodeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNodeResponse::kSuccessFieldNumber;
const int UpdateNodeResponse::kRedirectFieldNumber;
const int UpdateNodeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNodeResponse::UpdateNodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_UpdateNodeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.UpdateNodeResponse)
}
UpdateNodeResponse::UpdateNodeResponse(const UpdateNodeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.UpdateNodeResponse)
}

void UpdateNodeResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

UpdateNodeResponse::~UpdateNodeResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.UpdateNodeResponse)
  SharedDtor();
}

void UpdateNodeResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateNodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateNodeResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateNodeResponse& UpdateNodeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_UpdateNodeResponse.base);
  return *internal_default_instance();
}


void UpdateNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.UpdateNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      error_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.UpdateNodeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.UpdateNodeResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.UpdateNodeResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.UpdateNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.UpdateNodeResponse)
  return false;
#undef DO_
}

void UpdateNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.UpdateNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateNodeResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateNodeResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.UpdateNodeResponse)
}

::google::protobuf::uint8* UpdateNodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.UpdateNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateNodeResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateNodeResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.UpdateNodeResponse)
  return target;
}

size_t UpdateNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.UpdateNodeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional string error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.UpdateNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNodeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateNodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.UpdateNodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.UpdateNodeResponse)
    MergeFrom(*source);
  }
}

void UpdateNodeResponse::MergeFrom(const UpdateNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.UpdateNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.UpdateNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNodeResponse::CopyFrom(const UpdateNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.UpdateNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void UpdateNodeResponse::Swap(UpdateNodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNodeResponse::InternalSwap(UpdateNodeResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateNodeResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateClusterSettingRequest::InitAsDefaultInstance() {
  ::elasticfaiss::_UpdateClusterSettingRequest_default_instance_._instance.get_mutable()->settings_ = const_cast< ::elasticfaiss::ClusterSettings*>(
      ::elasticfaiss::ClusterSettings::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterSettingRequest::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterSettingRequest::UpdateClusterSettingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_UpdateClusterSettingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.UpdateClusterSettingRequest)
}
UpdateClusterSettingRequest::UpdateClusterSettingRequest(const UpdateClusterSettingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_settings()) {
    settings_ = new ::elasticfaiss::ClusterSettings(*from.settings_);
  } else {
    settings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.UpdateClusterSettingRequest)
}

void UpdateClusterSettingRequest::SharedCtor() {
  settings_ = NULL;
}

UpdateClusterSettingRequest::~UpdateClusterSettingRequest() {
  // @@protoc_insertion_point(destructor:elasticfaiss.UpdateClusterSettingRequest)
  SharedDtor();
}

void UpdateClusterSettingRequest::SharedDtor() {
  if (this != internal_default_instance()) delete settings_;
}

void UpdateClusterSettingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateClusterSettingRequest::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterSettingRequest& UpdateClusterSettingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_UpdateClusterSettingRequest.base);
  return *internal_default_instance();
}


void UpdateClusterSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.UpdateClusterSettingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(settings_ != NULL);
    settings_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateClusterSettingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.UpdateClusterSettingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .elasticfaiss.ClusterSettings settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.UpdateClusterSettingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.UpdateClusterSettingRequest)
  return false;
#undef DO_
}

void UpdateClusterSettingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.UpdateClusterSettingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.ClusterSettings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_settings(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.UpdateClusterSettingRequest)
}

::google::protobuf::uint8* UpdateClusterSettingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.UpdateClusterSettingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .elasticfaiss.ClusterSettings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_settings(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.UpdateClusterSettingRequest)
  return target;
}

size_t UpdateClusterSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.UpdateClusterSettingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .elasticfaiss.ClusterSettings settings = 1;
  if (has_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *settings_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateClusterSettingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.UpdateClusterSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterSettingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterSettingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.UpdateClusterSettingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.UpdateClusterSettingRequest)
    MergeFrom(*source);
  }
}

void UpdateClusterSettingRequest::MergeFrom(const UpdateClusterSettingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.UpdateClusterSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_settings()) {
    mutable_settings()->::elasticfaiss::ClusterSettings::MergeFrom(from.settings());
  }
}

void UpdateClusterSettingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.UpdateClusterSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterSettingRequest::CopyFrom(const UpdateClusterSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.UpdateClusterSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterSettingRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UpdateClusterSettingRequest::Swap(UpdateClusterSettingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterSettingRequest::InternalSwap(UpdateClusterSettingRequest* other) {
  using std::swap;
  swap(settings_, other->settings_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateClusterSettingRequest::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateClusterSettingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterSettingResponse::kSuccessFieldNumber;
const int UpdateClusterSettingResponse::kRedirectFieldNumber;
const int UpdateClusterSettingResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterSettingResponse::UpdateClusterSettingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_master_2eproto::scc_info_UpdateClusterSettingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:elasticfaiss.UpdateClusterSettingResponse)
}
UpdateClusterSettingResponse::UpdateClusterSettingResponse(const UpdateClusterSettingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect()) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:elasticfaiss.UpdateClusterSettingResponse)
}

void UpdateClusterSettingResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

UpdateClusterSettingResponse::~UpdateClusterSettingResponse() {
  // @@protoc_insertion_point(destructor:elasticfaiss.UpdateClusterSettingResponse)
  SharedDtor();
}

void UpdateClusterSettingResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateClusterSettingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateClusterSettingResponse::descriptor() {
  ::protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterSettingResponse& UpdateClusterSettingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_master_2eproto::scc_info_UpdateClusterSettingResponse.base);
  return *internal_default_instance();
}


void UpdateClusterSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticfaiss.UpdateClusterSettingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      redirect_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      error_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateClusterSettingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elasticfaiss.UpdateClusterSettingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.UpdateClusterSettingResponse.redirect");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "elasticfaiss.UpdateClusterSettingResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elasticfaiss.UpdateClusterSettingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elasticfaiss.UpdateClusterSettingResponse)
  return false;
#undef DO_
}

void UpdateClusterSettingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elasticfaiss.UpdateClusterSettingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateClusterSettingResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateClusterSettingResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elasticfaiss.UpdateClusterSettingResponse)
}

::google::protobuf::uint8* UpdateClusterSettingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elasticfaiss.UpdateClusterSettingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional string redirect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateClusterSettingResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "elasticfaiss.UpdateClusterSettingResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticfaiss.UpdateClusterSettingResponse)
  return target;
}

size_t UpdateClusterSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticfaiss.UpdateClusterSettingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect());
    }

    // optional string error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateClusterSettingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticfaiss.UpdateClusterSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterSettingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterSettingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticfaiss.UpdateClusterSettingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticfaiss.UpdateClusterSettingResponse)
    MergeFrom(*source);
  }
}

void UpdateClusterSettingResponse::MergeFrom(const UpdateClusterSettingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticfaiss.UpdateClusterSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_redirect();
      redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateClusterSettingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticfaiss.UpdateClusterSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterSettingResponse::CopyFrom(const UpdateClusterSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticfaiss.UpdateClusterSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterSettingResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void UpdateClusterSettingResponse::Swap(UpdateClusterSettingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterSettingResponse::InternalSwap(UpdateClusterSettingResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateClusterSettingResponse::GetMetadata() const {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_master_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MasterService::~MasterService() {}

const ::google::protobuf::ServiceDescriptor* MasterService::descriptor() {
  protobuf_master_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_master_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* MasterService::GetDescriptor() {
  return descriptor();
}

void MasterService::bootstrap(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::BootstrapRequest*,
                         ::elasticfaiss::BootstrapResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method bootstrap() not implemented.");
  done->Run();
}

void MasterService::node_heartbeat(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::NodeHeartbeatRequest*,
                         ::elasticfaiss::NodeHeartbeatResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method node_heartbeat() not implemented.");
  done->Run();
}

void MasterService::cluster_setting(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::UpdateClusterSettingRequest*,
                         ::elasticfaiss::UpdateClusterSettingResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cluster_setting() not implemented.");
  done->Run();
}

void MasterService::get_cluster_state(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::GetClusterStateRequest*,
                         ::elasticfaiss::GetClusterStateResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method get_cluster_state() not implemented.");
  done->Run();
}

void MasterService::create_index(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::CreateIndexRequest*,
                         ::elasticfaiss::CreateIndexResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method create_index() not implemented.");
  done->Run();
}

void MasterService::delete_index(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::DeleteIndexRequest*,
                         ::elasticfaiss::DeleteIndexResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method delete_index() not implemented.");
  done->Run();
}

void MasterService::update_index(::google::protobuf::RpcController* controller,
                         const ::elasticfaiss::UpdateIndexRequest*,
                         ::elasticfaiss::UpdateIndexResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method update_index() not implemented.");
  done->Run();
}

void MasterService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_master_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      bootstrap(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::BootstrapRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::BootstrapResponse*>(response),
             done);
      break;
    case 1:
      node_heartbeat(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::NodeHeartbeatRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::NodeHeartbeatResponse*>(response),
             done);
      break;
    case 2:
      cluster_setting(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::UpdateClusterSettingRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::UpdateClusterSettingResponse*>(response),
             done);
      break;
    case 3:
      get_cluster_state(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::GetClusterStateRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::GetClusterStateResponse*>(response),
             done);
      break;
    case 4:
      create_index(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::CreateIndexRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::CreateIndexResponse*>(response),
             done);
      break;
    case 5:
      delete_index(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::DeleteIndexRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::DeleteIndexResponse*>(response),
             done);
      break;
    case 6:
      update_index(controller,
             ::google::protobuf::down_cast<const ::elasticfaiss::UpdateIndexRequest*>(request),
             ::google::protobuf::down_cast< ::elasticfaiss::UpdateIndexResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& MasterService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::elasticfaiss::BootstrapRequest::default_instance();
    case 1:
      return ::elasticfaiss::NodeHeartbeatRequest::default_instance();
    case 2:
      return ::elasticfaiss::UpdateClusterSettingRequest::default_instance();
    case 3:
      return ::elasticfaiss::GetClusterStateRequest::default_instance();
    case 4:
      return ::elasticfaiss::CreateIndexRequest::default_instance();
    case 5:
      return ::elasticfaiss::DeleteIndexRequest::default_instance();
    case 6:
      return ::elasticfaiss::UpdateIndexRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& MasterService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::elasticfaiss::BootstrapResponse::default_instance();
    case 1:
      return ::elasticfaiss::NodeHeartbeatResponse::default_instance();
    case 2:
      return ::elasticfaiss::UpdateClusterSettingResponse::default_instance();
    case 3:
      return ::elasticfaiss::GetClusterStateResponse::default_instance();
    case 4:
      return ::elasticfaiss::CreateIndexResponse::default_instance();
    case 5:
      return ::elasticfaiss::DeleteIndexResponse::default_instance();
    case 6:
      return ::elasticfaiss::UpdateIndexResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MasterService_Stub::MasterService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MasterService_Stub::MasterService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
MasterService_Stub::~MasterService_Stub() {
  if (owns_channel_) delete channel_;
}

void MasterService_Stub::bootstrap(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::BootstrapRequest* request,
                              ::elasticfaiss::BootstrapResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void MasterService_Stub::node_heartbeat(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::NodeHeartbeatRequest* request,
                              ::elasticfaiss::NodeHeartbeatResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void MasterService_Stub::cluster_setting(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::UpdateClusterSettingRequest* request,
                              ::elasticfaiss::UpdateClusterSettingResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void MasterService_Stub::get_cluster_state(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::GetClusterStateRequest* request,
                              ::elasticfaiss::GetClusterStateResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void MasterService_Stub::create_index(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::CreateIndexRequest* request,
                              ::elasticfaiss::CreateIndexResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void MasterService_Stub::delete_index(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::DeleteIndexRequest* request,
                              ::elasticfaiss::DeleteIndexResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void MasterService_Stub::update_index(::google::protobuf::RpcController* controller,
                              const ::elasticfaiss::UpdateIndexRequest* request,
                              ::elasticfaiss::UpdateIndexResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace elasticfaiss
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::ClusterSettings* Arena::CreateMaybeMessage< ::elasticfaiss::ClusterSettings >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::ClusterSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::WorkNode* Arena::CreateMaybeMessage< ::elasticfaiss::WorkNode >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::WorkNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::ClusterState* Arena::CreateMaybeMessage< ::elasticfaiss::ClusterState >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::ClusterState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::MasterSnapshot* Arena::CreateMaybeMessage< ::elasticfaiss::MasterSnapshot >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::MasterSnapshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::BootstrapRequest* Arena::CreateMaybeMessage< ::elasticfaiss::BootstrapRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::BootstrapRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::BootstrapResponse* Arena::CreateMaybeMessage< ::elasticfaiss::BootstrapResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::BootstrapResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::NodeHeartbeatRequest* Arena::CreateMaybeMessage< ::elasticfaiss::NodeHeartbeatRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::NodeHeartbeatRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::NodeHeartbeatResponse* Arena::CreateMaybeMessage< ::elasticfaiss::NodeHeartbeatResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::NodeHeartbeatResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::GetClusterStateRequest* Arena::CreateMaybeMessage< ::elasticfaiss::GetClusterStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::GetClusterStateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::GetClusterStateResponse* Arena::CreateMaybeMessage< ::elasticfaiss::GetClusterStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::GetClusterStateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::CreateIndexRequest* Arena::CreateMaybeMessage< ::elasticfaiss::CreateIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::CreateIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::CreateIndexResponse* Arena::CreateMaybeMessage< ::elasticfaiss::CreateIndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::CreateIndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::DeleteIndexRequest* Arena::CreateMaybeMessage< ::elasticfaiss::DeleteIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::DeleteIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::DeleteIndexResponse* Arena::CreateMaybeMessage< ::elasticfaiss::DeleteIndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::DeleteIndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::UpdateIndexRequest* Arena::CreateMaybeMessage< ::elasticfaiss::UpdateIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::UpdateIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::UpdateIndexResponse* Arena::CreateMaybeMessage< ::elasticfaiss::UpdateIndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::UpdateIndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::UpdateNodeRequest* Arena::CreateMaybeMessage< ::elasticfaiss::UpdateNodeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::UpdateNodeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::UpdateNodeResponse* Arena::CreateMaybeMessage< ::elasticfaiss::UpdateNodeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::UpdateNodeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::UpdateClusterSettingRequest* Arena::CreateMaybeMessage< ::elasticfaiss::UpdateClusterSettingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::UpdateClusterSettingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::elasticfaiss::UpdateClusterSettingResponse* Arena::CreateMaybeMessage< ::elasticfaiss::UpdateClusterSettingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::elasticfaiss::UpdateClusterSettingResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
